GAS LISTING /var/tmp//cc8X51rx.s 			page 1


   1               		.file	"firefly.c"
   2               		.arch attiny45
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
  96               	.global	__vector_12
  98               	__vector_12:
  99               		.stabd	46,0,0
   1:firefly.c     **** #include <avr/io.h>
   2:firefly.c     **** #include <avr/wdt.h>
   3:firefly.c     **** #include <avr/interrupt.h>
   4:firefly.c     **** #include <avr/pgmspace.h>
   5:firefly.c     **** #include <avr/sleep.h>
   6:firefly.c     **** #include <avr/power.h>
   7:firefly.c     **** #include "firefly.h"
   8:firefly.c     **** 
   9:firefly.c     **** const prog_uint8_t about[] = "Jar of Fireflies\n"
  10:firefly.c     ****             "Design and Implimentation by Xander Hudson (jar@synoptic.org)\n"
  11:firefly.c     ****             "Idea and Inspiration by Kayobi Tierney\n"
  12:firefly.c     ****             "Special thanks to Katie Horn for getting me to think about electronics";
  13:firefly.c     **** const prog_uint8_t version[] = "$Revision: 1.41 $ $Date: 2007/01/10 04:35:55 $";
  14:firefly.c     **** 
  15:firefly.c     **** #define LEDS_OFF ~(_BV(PIN_A) | _BV(PIN_B))
  16:firefly.c     **** 
  17:firefly.c     **** #define WATCHDOG_OK  WDTCR |= _BV(WDIE)
  18:firefly.c     **** 
  19:firefly.c     **** uint8_t pickapin (uint8_t);
  20:firefly.c     **** const Song *pickasong (void);
  21:firefly.c     **** uint8_t randwaitval (void);
  22:firefly.c     **** uint8_t randbits (uint8_t);
  23:firefly.c     **** uint8_t pickmaster (void);
  24:firefly.c     **** uint8_t randscaleval (void);
  25:firefly.c     **** void showbootup (void);
  26:firefly.c     **** 
  27:firefly.c     **** #define ch1playing ((volatile io_reg*) _SFR_MEM_ADDR(FLAGS0))->b0
  28:firefly.c     **** #define ch1resting ((volatile io_reg*) _SFR_MEM_ADDR(FLAGS0))->b1
  29:firefly.c     **** #define ch2playing ((volatile io_reg*) _SFR_MEM_ADDR(FLAGS0))->b2
  30:firefly.c     **** #define ch2resting ((volatile io_reg*) _SFR_MEM_ADDR(FLAGS0))->b3
  31:firefly.c     **** #define need_mood ((volatile io_reg*) _SFR_MEM_ADDR(FLAGS0))->b4
  32:firefly.c     **** #define ch1noteready ((volatile io_reg*) _SFR_MEM_ADDR(FLAGS0))->b6
  33:firefly.c     **** #define ch2noteready ((volatile io_reg*) _SFR_MEM_ADDR(FLAGS0))->b7
  34:firefly.c     **** 
  35:firefly.c     **** volatile uint8_t ch1restcount;
  36:firefly.c     **** volatile uint8_t ch2restcount;
  37:firefly.c     **** 
  38:firefly.c     **** volatile uint8_t ch1nextnote;
  39:firefly.c     **** volatile uint8_t ch2nextnote;
  40:firefly.c     **** 
  41:firefly.c     **** volatile uint8_t ch1scale;
  42:firefly.c     **** volatile uint8_t ch2scale;
  43:firefly.c     **** volatile uint8_t ch1nextscale;
GAS LISTING /var/tmp//cc8X51rx.s 			page 2


  44:firefly.c     **** volatile uint8_t ch2nextscale;
  45:firefly.c     **** 
  46:firefly.c     **** register uint8_t ch1bright asm ("r2");
  47:firefly.c     **** register uint8_t ch2bright asm ("r3");
  48:firefly.c     **** register uint8_t ch1err asm ("r4");
  49:firefly.c     **** register uint8_t ch2err asm ("r5");
  50:firefly.c     **** register uint8_t ch1pin asm ("r6");
  51:firefly.c     **** register uint8_t ch2pin asm ("r7");
  52:firefly.c     **** register uint8_t portval asm ("r8");
  53:firefly.c     **** 
  54:firefly.c     **** /*  mood, mood_count                                                */
  55:firefly.c     **** /*  This value changes slowly over time and is added to the random          */
  56:firefly.c     **** /*  wait timer.  Having this change slowly adds a sense of 'moodiness'      */
  57:firefly.c     **** /*  where the fireflys will go through phases of being active or lethargic. */
  58:firefly.c     **** 
  59:firefly.c     **** uint8_t mood = 2;
  60:firefly.c     **** uint16_t mood_count = 30;   // WDT cycles before changing mood
  61:firefly.c     **** 
  62:firefly.c     **** volatile uint8_t masterpinmask;
  63:firefly.c     **** 
  64:firefly.c     **** /* Intentionally crash the program leaving a visual clue.  The  */
  65:firefly.c     **** /* watchdog should then come and reboot us.                     */
  66:firefly.c     **** #define FREAKOUT  for (;;) {PORTB = LEDS_OFF; PORTB = ~LEDS_OFF; } 
  67:firefly.c     **** 
  68:firefly.c     **** ISR(WDT_vect) {
 101               	.LM0:
 102               	/* prologue: frame size=0 */
 103 0000 1F92      		push __zero_reg__
 104 0002 0F92      		push __tmp_reg__
 105 0004 0FB6      		in __tmp_reg__,__SREG__
 106 0006 0F92      		push __tmp_reg__
 107 0008 1124      		clr __zero_reg__
 108 000a 8F93      		push r24
 109 000c 9F93      		push r25
 110               	/* prologue end (size=7) */
  69:firefly.c     ****     if (ch1resting && (--ch1restcount == 0)) ch1resting = 0;
 112               	.LM1:
 113 000e 899B      		sbis 49-0x20,1
 114 0010 00C0      		rjmp .L2
 116               	.LM2:
 117 0012 8091 0000 		lds r24,ch1restcount
 118 0016 8150      		subi r24,lo8(-(-1))
 119 0018 8093 0000 		sts ch1restcount,r24
 120 001c 8091 0000 		lds r24,ch1restcount
 121 0020 8823      		tst r24
 122 0022 01F4      		brne .L2
 123 0024 8998      		cbi 49-0x20,1
 124               	.L2:
  70:firefly.c     ****     if (ch2resting && (--ch2restcount == 0)) ch2resting = 0;
 126               	.LM3:
 127 0026 8B9B      		sbis 49-0x20,3
 128 0028 00C0      		rjmp .L5
 129 002a 8091 0000 		lds r24,ch2restcount
 130 002e 8150      		subi r24,lo8(-(-1))
 131 0030 8093 0000 		sts ch2restcount,r24
 132 0034 8091 0000 		lds r24,ch2restcount
 133 0038 8823      		tst r24
GAS LISTING /var/tmp//cc8X51rx.s 			page 3


 134 003a 01F4      		brne .L5
 135 003c 8B98      		cbi 49-0x20,3
 136               	.L5:
  71:firefly.c     ****     if (!need_mood && (--mood_count == 0)) need_mood = 1;
 138               	.LM4:
 139 003e 8C99      		sbic 49-0x20,4
 140 0040 00C0      		rjmp .L11
 141 0042 8091 0000 		lds r24,mood_count
 142 0046 9091 0000 		lds r25,(mood_count)+1
 143 004a 0197      		sbiw r24,1
 144 004c 9093 0000 		sts (mood_count)+1,r25
 145 0050 8093 0000 		sts mood_count,r24
 146 0054 892B      		or r24,r25
 147 0056 01F4      		brne .L11
 148 0058 8C9A      		sbi 49-0x20,4
 149               	.L11:
 150               	/* epilogue: frame size=0 */
 151 005a 9F91      		pop r25
 152 005c 8F91      		pop r24
 153 005e 0F90      		pop __tmp_reg__
 154 0060 0FBE      		out __SREG__,__tmp_reg__
 155 0062 0F90      		pop __tmp_reg__
 156 0064 1F90      		pop __zero_reg__
 157 0066 1895      		reti
 158               	/* epilogue end (size=7) */
 159               	/* function __vector_12 size 52 (38) */
 161               	.Lscope0:
 163               		.stabd	78,0,0
 165               	.global	__vector_10
 167               	__vector_10:
 168               		.stabd	46,0,0
  72:firefly.c     **** }
  73:firefly.c     **** 
  74:firefly.c     **** ISR(TIM0_COMPA_vect) {
 170               	.LM5:
 171               	/* prologue: frame size=0 */
 172 0068 1F92      		push __zero_reg__
 173 006a 0F92      		push __tmp_reg__
 174 006c 0FB6      		in __tmp_reg__,__SREG__
 175 006e 0F92      		push __tmp_reg__
 176 0070 1124      		clr __zero_reg__
 177 0072 8F93      		push r24
 178               	/* prologue end (size=6) */
  75:firefly.c     ****     static uint8_t x;
  76:firefly.c     **** 
  77:firefly.c     ****     // Do this right up front so there's no jitter from all
  78:firefly.c     ****     // the complex logic to follow.
  79:firefly.c     ****     PORTB=portval;
 180               	.LM6:
 181 0074 88BA      		out 56-0x20,r8
  80:firefly.c     ****     
  81:firefly.c     ****     // x rolls around to zero natrually every 256 cycles.  It's on
  82:firefly.c     ****     // the start of one of these cycles that we change the note that
  83:firefly.c     ****     // we're playing.
  84:firefly.c     ****     if ( x-- == 0 ) {
 183               	.LM7:
 184 0076 8091 0000 		lds r24,x.1449
GAS LISTING /var/tmp//cc8X51rx.s 			page 4


 185 007a 8150      		subi r24,lo8(-(-1))
 186 007c 8093 0000 		sts x.1449,r24
 187 0080 8F3F      		cpi r24,lo8(-1)
 188 0082 01F0      		breq .+2
 189 0084 00C0      		rjmp .L13
  85:firefly.c     ****         if (ch1playing) {
 191               	.LM8:
 192 0086 889B      		sbis 49-0x20,0
 193 0088 00C0      		rjmp .L15
  86:firefly.c     ****             // We're playing a song. Is there another note
  87:firefly.c     ****             // for us to read? If not, shut down.
  88:firefly.c     ****             if (ch1noteready) {  
 195               	.LM9:
 196 008a 8E9B      		sbis 49-0x20,6
 197 008c 00C0      		rjmp .L17
  89:firefly.c     ****                 ch1bright = ch1nextnote;
 199               	.LM10:
 200 008e 8091 0000 		lds r24,ch1nextnote
 201 0092 282E      		mov r2,r24
  90:firefly.c     ****                 ch1noteready = 0;
 203               	.LM11:
 204 0094 8E98      		cbi 49-0x20,6
 205 0096 00C0      		rjmp .L19
 206               	.L17:
  91:firefly.c     ****             } else {
  92:firefly.c     ****                 // We ran out of notes to play.
  93:firefly.c     ****                 ch1bright = 0;
 208               	.LM12:
 209 0098 2224      		clr r2
  94:firefly.c     ****                 // Has our rest duration been chosen yet?
  95:firefly.c     ****                 if (ch1restcount != 0) {  
 211               	.LM13:
 212 009a 8091 0000 		lds r24,ch1restcount
 213 009e 8823      		tst r24
 214 00a0 01F0      		breq .L19
  96:firefly.c     ****                     ch1playing = 0;   
 216               	.LM14:
 217 00a2 8898      		cbi 49-0x20,0
  97:firefly.c     ****                     ch1resting = 1;
 219               	.LM15:
 220 00a4 899A      		sbi 49-0x20,1
 221 00a6 00C0      		rjmp .L19
 222               	.L15:
  98:firefly.c     ****                 } // if not, go through the loop again.
  99:firefly.c     ****             }
 100:firefly.c     ****         } else if (!ch1resting && ch1noteready) {  
 224               	.LM16:
 225 00a8 8999      		sbic 49-0x20,1
 226 00aa 00C0      		rjmp .L19
 227 00ac 8E9B      		sbis 49-0x20,6
 228 00ae 00C0      		rjmp .L19
 101:firefly.c     ****                 // We weren't playing a song but now we see
 102:firefly.c     ****                 // that we're clear to start.
 103:firefly.c     ****                 ch1bright = ch1nextnote;
 230               	.LM17:
 231 00b0 8091 0000 		lds r24,ch1nextnote
 232 00b4 282E      		mov r2,r24
GAS LISTING /var/tmp//cc8X51rx.s 			page 5


 104:firefly.c     ****                 ch1noteready = 0;
 234               	.LM18:
 235 00b6 8E98      		cbi 49-0x20,6
 105:firefly.c     ****                 ch1playing = 1;
 237               	.LM19:
 238 00b8 889A      		sbi 49-0x20,0
 239               	.L19:
 106:firefly.c     ****         }
 107:firefly.c     **** 
 108:firefly.c     ****         if (ch2playing) {
 241               	.LM20:
 242 00ba 8A9B      		sbis 49-0x20,2
 243 00bc 00C0      		rjmp .L23
 109:firefly.c     ****             if (ch2noteready) {
 245               	.LM21:
 246 00be 8F9B      		sbis 49-0x20,7
 247 00c0 00C0      		rjmp .L25
 110:firefly.c     ****                 ch2bright = ch2nextnote;
 249               	.LM22:
 250 00c2 8091 0000 		lds r24,ch2nextnote
 251 00c6 382E      		mov r3,r24
 111:firefly.c     ****                 ch2noteready = 0;
 253               	.LM23:
 254 00c8 8F98      		cbi 49-0x20,7
 255 00ca 00C0      		rjmp .L27
 256               	.L25:
 112:firefly.c     ****             } else {
 113:firefly.c     ****                 ch2bright = 0;
 258               	.LM24:
 259 00cc 3324      		clr r3
 114:firefly.c     ****                 // Has our rest duration been chosen yet?
 115:firefly.c     ****                 if (ch2restcount != 0) {  
 261               	.LM25:
 262 00ce 8091 0000 		lds r24,ch2restcount
 263 00d2 8823      		tst r24
 264 00d4 01F0      		breq .L27
 116:firefly.c     ****                     ch2playing = 0;   
 266               	.LM26:
 267 00d6 8A98      		cbi 49-0x20,2
 117:firefly.c     ****                     ch2resting = 1;
 269               	.LM27:
 270 00d8 8B9A      		sbi 49-0x20,3
 271 00da 00C0      		rjmp .L27
 272               	.L23:
 118:firefly.c     ****                 } // if not, go through the loop again.
 119:firefly.c     ****             }
 120:firefly.c     ****         } else if (!ch2resting && ch2noteready) {
 274               	.LM28:
 275 00dc 8B99      		sbic 49-0x20,3
 276 00de 00C0      		rjmp .L27
 277 00e0 8F9B      		sbis 49-0x20,7
 278 00e2 00C0      		rjmp .L27
 121:firefly.c     ****                 ch2bright = ch2nextnote;
 280               	.LM29:
 281 00e4 8091 0000 		lds r24,ch2nextnote
 282 00e8 382E      		mov r3,r24
 122:firefly.c     ****                 ch2noteready = 0;
GAS LISTING /var/tmp//cc8X51rx.s 			page 6


 284               	.LM30:
 285 00ea 8F98      		cbi 49-0x20,7
 123:firefly.c     ****                 ch2playing = 1;
 287               	.LM31:
 288 00ec 8A9A      		sbi 49-0x20,2
 289               	.L27:
 124:firefly.c     ****         }
 125:firefly.c     ****         
 126:firefly.c     ****         // These shouldn't be neccessary since the error
 127:firefly.c     ****         // value should wrap around to 0 after 256 cycles
 128:firefly.c     ****         // anyways, but leave these in until I'm able to
 129:firefly.c     ****         // verify that.
 130:firefly.c     **** 
 131:firefly.c     ****         if (ch1playing) ch1err = 0;
 291               	.LM32:
 292 00ee 8899      		sbic 49-0x20,0
 293 00f0 4424      		clr r4
 294               	.L31:
 132:firefly.c     ****         if (ch2playing) ch2err = 0;
 296               	.LM33:
 297 00f2 8A99      		sbic 49-0x20,2
 298 00f4 5524      		clr r5
 299               	.L33:
 133:firefly.c     **** 
 134:firefly.c     ****         // If either channel is playing, turn on the master pin.    
 135:firefly.c     ****         if (ch1playing || ch2playing) 
 301               	.LM34:
 302 00f6 8899      		sbic 49-0x20,0
 303 00f8 00C0      		rjmp .L35
 304 00fa 8A9B      		sbis 49-0x20,2
 305 00fc 00C0      		rjmp .L37
 306               	.L35:
 136:firefly.c     ****             portval = LEDS_OFF | masterpinmask;
 308               	.LM35:
 309 00fe 8091 0000 		lds r24,masterpinmask
 310 0102 0F2E      		mov __tmp_reg__,r31
 311 0104 FDEE      		ldi r31,lo8(-19)
 312 0106 8F2E      		mov r8,r31
 313 0108 F02D      		mov r31,__tmp_reg__
 314 010a 882A      		or r8,r24
 315 010c 00C0      		rjmp .L13
 316               	.L37:
 137:firefly.c     ****         else 
 138:firefly.c     ****             portval = LEDS_OFF;    // lights off.
 318               	.LM36:
 319 010e 8DEE      		ldi r24,lo8(-19)
 320 0110 882E      		mov r8,r24
 321               	.L13:
 139:firefly.c     ****     }
 140:firefly.c     **** 
 141:firefly.c     ****     // Here is where we do the actual PWM, which is defined as
 142:firefly.c     ****     // an inline assembler macro.
 143:firefly.c     ****     if ( ch1playing ) pwm(ch1bright, ch1err, portval, ch1pin);
 323               	.LM37:
 324 0112 889B      		sbis 49-0x20,0
 325 0114 00C0      		rjmp .L38
 326               	/* #APP */
GAS LISTING /var/tmp//cc8X51rx.s 			page 7


 327 0116 062C      		mov     __tmp_reg__, r6
 328 0118 27FA      		bst     r2, 7
 329 011a 420C      		add     r4, r2
 330 011c 03F0      		brvs    von_175
 331 011e 06F0      		brts    turnon_175
 332 0120 00C0      		rjmp    turnoff_175
 333               	von_175:
 334 0122 06F0      		brts    turnoff_175
 335               	turnon_175:
 336 0124 0094      		com     __tmp_reg__
 337 0126 8020      		and     r8, __tmp_reg__
 338 0128 00C0      	rjmp    done_175
 339               	turnoff_175:
 340 012a 8028      		or      r8, __tmp_reg__
 341               		done_175:
 342               		
 343               	/* #NOAPP */
 344               	.L38:
 144:firefly.c     ****     if ( ch2playing ) pwm(ch2bright, ch2err, portval, ch2pin);
 346               	.LM38:
 347 012c 8A9B      		sbis 49-0x20,2
 348 012e 00C0      		rjmp .L42
 349               	/* #APP */
 350 0130 072C      		mov     __tmp_reg__, r7
 351 0132 37FA      		bst     r3, 7
 352 0134 530C      		add     r5, r3
 353 0136 03F0      		brvs    von_181
 354 0138 06F0      		brts    turnon_181
 355 013a 00C0      		rjmp    turnoff_181
 356               	von_181:
 357 013c 06F0      		brts    turnoff_181
 358               	turnon_181:
 359 013e 0094      		com     __tmp_reg__
 360 0140 8020      		and     r8, __tmp_reg__
 361 0142 00C0      	rjmp    done_181
 362               	turnoff_181:
 363 0144 8028      		or      r8, __tmp_reg__
 364               		done_181:
 365               		
 366               	/* #NOAPP */
 367               	.L42:
 368               	/* epilogue: frame size=0 */
 369 0146 8F91      		pop r24
 370 0148 0F90      		pop __tmp_reg__
 371 014a 0FBE      		out __SREG__,__tmp_reg__
 372 014c 0F90      		pop __tmp_reg__
 373 014e 1F90      		pop __zero_reg__
 374 0150 1895      		reti
 375               	/* epilogue end (size=6) */
 376               	/* function __vector_10 size 161 (149) */
 381               	.Lscope1:
 383               		.stabd	78,0,0
 385               	.global	showbootup
 387               	showbootup:
 388               		.stabd	46,0,0
 145:firefly.c     **** 
 146:firefly.c     **** }
GAS LISTING /var/tmp//cc8X51rx.s 			page 8


 147:firefly.c     **** 
 148:firefly.c     **** 
 149:firefly.c     **** /*
 150:firefly.c     ****  * Do all the startup-time peripheral initializations.
 151:firefly.c     ****  */
 152:firefly.c     **** static void
 153:firefly.c     **** ioinit(void)
 154:firefly.c     **** { 
 155:firefly.c     ****     wdt_enable(WDTO_500MS);   // Set watchdog timeout
 156:firefly.c     **** 
 157:firefly.c     ****     WDTCR |= _BV(WDIE);    // Set watchdog to generate interrupt.
 158:firefly.c     **** 
 159:firefly.c     ****     // Set all pins as outputs.
 160:firefly.c     ****     // Drive PIN_A and PIN_B low, everybody else high.
 161:firefly.c     ****     DDRB = 0xFF;
 162:firefly.c     ****     PORTB= LEDS_OFF;
 163:firefly.c     **** 
 164:firefly.c     ****     PRR |= _BV(PRTIM1);  // Turn off Timer1 to save power.
 165:firefly.c     ****     PRR |= _BV(PRUSI);   // Turn off USI clock
 166:firefly.c     ****     PRR |= _BV(PRADC);   // Turn off ADC
 167:firefly.c     **** 
 168:firefly.c     ****     /*
 169:firefly.c     ****      * Set up the 8-bit timer 0.
 170:firefly.c     ****      *
 171:firefly.c     ****      * Timer0 will be set in CTC up with a prescalar of 8 and an OCR0A copmare 
 172:firefly.c     ****      * value of 25. 
 173:firefly.c     ****      * A core clock frequency of 8mhz / 4 means we should get an interrupt 
 174:firefly.c     ****      * frequency of about 39hz.  (freq = 976.563 / (OCR0A))
 175:firefly.c     ****      */
 176:firefly.c     **** 
 177:firefly.c     ****     TCCR0A = _BV(WGM01);  // Set CTC mode, timer counts 0 - OCRA
 178:firefly.c     **** 
 179:firefly.c     ****     //TCCR0B = _BV(CS01) | _BV(CS00); // Clock/64
 180:firefly.c     ****     //TCCR0B = _BV(CS00); // Clock
 181:firefly.c     ****     TCCR0B = _BV(CS01); // Clock/8
 182:firefly.c     ****     OCR0A = 25;
 183:firefly.c     **** 
 184:firefly.c     ****     clock_prescale_set(clock_div_4);
 185:firefly.c     **** 
 186:firefly.c     ****     TIMSK = _BV(OCIE0A);
 187:firefly.c     **** 
 188:firefly.c     ****     WATCHDOG_OK;
 189:firefly.c     **** }
 190:firefly.c     **** 
 191:firefly.c     **** int main(void) {
 192:firefly.c     ****     const Song *ch1song = 0;
 193:firefly.c     ****     const Song *ch2song = 0;
 194:firefly.c     ****     uint16_t ch1noteptr = 0;
 195:firefly.c     ****     uint16_t ch2noteptr = 0;
 196:firefly.c     ****     uint8_t temp;
 197:firefly.c     **** 
 198:firefly.c     ****     ioinit();
 199:firefly.c     **** 
 200:firefly.c     ****     // Zero out register variables.
 201:firefly.c     ****     ch1bright = ch2bright = ch1err = ch2err =
 202:firefly.c     ****         ch1pin = ch2pin = portval = 0;
 203:firefly.c     **** 
GAS LISTING /var/tmp//cc8X51rx.s 			page 9


 204:firefly.c     ****     // Zero out flags.
 205:firefly.c     ****     FLAGS0 = 0;
 206:firefly.c     **** 
 207:firefly.c     ****     sei();
 208:firefly.c     **** 
 209:firefly.c     ****     showbootup();
 210:firefly.c     **** 
 211:firefly.c     ****     ch1restcount = randwaitval();
 212:firefly.c     ****     ch2restcount = randwaitval();
 213:firefly.c     **** 
 214:firefly.c     ****     ch1resting = 1;
 215:firefly.c     ****     ch2resting = 1;
 216:firefly.c     **** 
 217:firefly.c     ****     for (;;) {
 218:firefly.c     **** 
 219:firefly.c     ****         /* If we have a channel playing, take care of its    */
 220:firefly.c     ****         /* housekeeping first.                               */
 221:firefly.c     ****         if (ch1playing || ch2playing) {
 222:firefly.c     ****             /* If channel is playing but doesn't have its next note   */
 223:firefly.c     ****             /* loaded, load it.                                       */
 224:firefly.c     **** 
 225:firefly.c     ****             if (ch1playing && !ch1noteready) {
 226:firefly.c     ****                 if ( ch1noteptr != ch1song->notecount ) {
 227:firefly.c     ****                 
 228:firefly.c     ****                     temp = pgm_read_byte(&ch1song->notes[ch1noteptr++]);
 229:firefly.c     ****                     temp = ((uint16_t)(ch1scale * temp)) >> 8;
 230:firefly.c     **** 
 231:firefly.c     ****                     cli();
 232:firefly.c     ****                     ch1nextnote = temp;
 233:firefly.c     ****                     ch1noteready = 1;
 234:firefly.c     ****                     sei();
 235:firefly.c     **** 
 236:firefly.c     ****                     continue;  // Loop over from start.
 237:firefly.c     ****                 } // Else end of song.
 238:firefly.c     ****             }
 239:firefly.c     **** 
 240:firefly.c     ****             if (ch2playing && !ch2noteready) {
 241:firefly.c     ****                 if ( ch2noteptr != ch2song->notecount ) {
 242:firefly.c     ****                     temp = pgm_read_byte(&ch2song->notes[ch2noteptr++]);
 243:firefly.c     ****                     temp = ((uint16_t)(ch2scale * temp)) >> 8;
 244:firefly.c     **** 
 245:firefly.c     ****                     cli();
 246:firefly.c     ****                     ch2nextnote = temp;
 247:firefly.c     ****                     ch2noteready = 1;
 248:firefly.c     ****                     sei();
 249:firefly.c     **** 
 250:firefly.c     ****                     continue;  // Loop over from start.
 251:firefly.c     ****                 } // Else end of song.
 252:firefly.c     ****             }
 253:firefly.c     **** 
 254:firefly.c     ****             /* If a channel is playing a song and its restcount is 0,   */
 255:firefly.c     ****             /* we need to pick a new random restcount for it.           */
 256:firefly.c     **** 
 257:firefly.c     ****             if (ch1playing && ch1restcount == 0) {
 258:firefly.c     ****                 temp = randwaitval();
 259:firefly.c     ****                 cli(); 
 260:firefly.c     ****                 ch1restcount = temp; 
GAS LISTING /var/tmp//cc8X51rx.s 			page 10


 261:firefly.c     ****                 sei();
 262:firefly.c     ****                 continue;  // Loop over from start.
 263:firefly.c     ****             }
 264:firefly.c     **** 
 265:firefly.c     ****             if (ch2playing && ch2restcount == 0) {
 266:firefly.c     ****                 temp = randwaitval();
 267:firefly.c     ****                 cli(); 
 268:firefly.c     ****                 ch2restcount = temp; 
 269:firefly.c     ****                 sei();
 270:firefly.c     ****                 continue;  // Loop over from start.
 271:firefly.c     ****             }
 272:firefly.c     ****         }
 273:firefly.c     **** 
 274:firefly.c     ****         /* If channel is done resting and waiting for a song to   */
 275:firefly.c     ****         /* be queued up, select a song for it.                    */
 276:firefly.c     ****         if (!ch1playing && !ch1resting && !ch1noteready) {   
 277:firefly.c     ****             ch1song = pickasong();           
 278:firefly.c     ****             ch1noteptr = 0;
 279:firefly.c     **** 
 280:firefly.c     ****             ch1pin = pickapin(ch2pin);
 281:firefly.c     **** 
 282:firefly.c     ****             // Now pick a random scaling value so the brightness
 283:firefly.c     ****             // varies over time.
 284:firefly.c     ****             ch1scale = randscaleval();
 285:firefly.c     ****            
 286:firefly.c     ****             temp = pgm_read_byte(&ch1song->notes[ch1noteptr++]);
 287:firefly.c     ****             temp = ((uint16_t)(ch1scale * temp)) >> 8;
 288:firefly.c     **** 
 289:firefly.c     ****             // If the other channel isn't playing lets reselect the
 290:firefly.c     ****             // master pin.
 291:firefly.c     ****             if (ch2resting) masterpinmask = pickmaster();        
 292:firefly.c     **** 
 293:firefly.c     ****             cli();
 294:firefly.c     ****             ch1nextnote = temp;
 295:firefly.c     ****             ch1noteready = 1;
 296:firefly.c     ****             sei();
 297:firefly.c     **** 
 298:firefly.c     ****             continue;  // Loop over from start.
 299:firefly.c     ****         }
 300:firefly.c     ****         
 301:firefly.c     ****         if (!ch2playing && !ch2resting && !ch2noteready) {
 302:firefly.c     ****             ch2song = pickasong();           
 303:firefly.c     ****             ch2noteptr = 0;
 304:firefly.c     **** 
 305:firefly.c     ****             ch2pin = pickapin(ch1pin);
 306:firefly.c     **** 
 307:firefly.c     ****             // Now pick a random scaling value so the brightness
 308:firefly.c     ****             // varies over time.
 309:firefly.c     ****             ch2scale = randscaleval();
 310:firefly.c     **** 
 311:firefly.c     ****             temp = pgm_read_byte(&ch2song->notes[ch2noteptr++]);
 312:firefly.c     ****             temp = ((uint16_t)(ch2scale * temp)) >> 8;
 313:firefly.c     **** 
 314:firefly.c     ****             // If the other channel isn't playing lets reselect the
 315:firefly.c     ****             // master pin.
 316:firefly.c     ****             if (ch1resting) masterpinmask = pickmaster();        
 317:firefly.c     **** 
GAS LISTING /var/tmp//cc8X51rx.s 			page 11


 318:firefly.c     ****             cli();
 319:firefly.c     ****             ch2nextnote = temp;
 320:firefly.c     ****             ch2noteready = 1;
 321:firefly.c     ****             sei();
 322:firefly.c     **** 
 323:firefly.c     ****             continue;  // Loop over from start.
 324:firefly.c     ****         }
 325:firefly.c     **** 
 326:firefly.c     ****         if (need_mood) {
 327:firefly.c     **** #ifdef PHOTOSHOOT
 328:firefly.c     ****             mood = 1; 
 329:firefly.c     **** #else                   
 330:firefly.c     ****             mood = randbits(5) + 8; 
 331:firefly.c     **** #endif
 332:firefly.c     ****             mood_count = 60 * 5 * 2;
 333:firefly.c     ****             need_mood = 0;
 334:firefly.c     ****             
 335:firefly.c     ****             continue;  // Loop over from start.
 336:firefly.c     ****         }   
 337:firefly.c     **** 
 338:firefly.c     ****         WATCHDOG_OK;
 339:firefly.c     **** 
 340:firefly.c     ****         /* If both channels are resting then go to deep sleep.    */
 341:firefly.c     ****         /* We shouldn't get to here unless all our housekeeping   */
 342:firefly.c     ****         /* work is done.                                          */
 343:firefly.c     ****         if (ch1resting && ch2resting) {
 344:firefly.c     ****             set_sleep_mode(SLEEP_MODE_PWR_DOWN);
 345:firefly.c     ****             sleep_mode();
 346:firefly.c     ****         } else {
 347:firefly.c     ****             set_sleep_mode(SLEEP_MODE_IDLE);
 348:firefly.c     ****             sleep_mode();
 349:firefly.c     ****         }   
 350:firefly.c     ****     }           
 351:firefly.c     **** }
 352:firefly.c     **** 
 353:firefly.c     **** void showbootup (void) {
 390               	.LM39:
 391               	/* prologue: frame size=0 */
 392 0152 CF93      		push r28
 393 0154 DF93      		push r29
 394               	/* prologue end (size=2) */
 354:firefly.c     ****     // This is a bit of a mystery
 355:firefly.c     ****     // Wasn't able to find out why the program would
 356:firefly.c     ****     // break if I tried to something like 
 357:firefly.c     ****     //       Song *ch1song = &bootsong;
 358:firefly.c     ****     const Song *ch1song = bootsongs[0];
 396               	.LM40:
 397 0156 4091 0000 		lds r20,bootsongs
 398 015a 5091 0000 		lds r21,(bootsongs)+1
 359:firefly.c     ****     uint16_t ch1noteptr;
 360:firefly.c     ****     uint8_t mpin,cpin;
 361:firefly.c     **** 
 362:firefly.c     ****     const uint8_t masterpins[] = { _BV(PIN_A), _BV(PIN_B) };
 363:firefly.c     ****     const uint8_t ch1pins[] = { _BV(PIN_C), _BV(PIN_D), _BV(PIN_E) };
 364:firefly.c     **** 
 365:firefly.c     ****     cli();
 400               	.LM41:
GAS LISTING /var/tmp//cc8X51rx.s 			page 12


 401               	/* #APP */
 402 015e F894      		cli
 366:firefly.c     ****     ch1restcount = 2;
 404               	.LM42:
 405               	/* #NOAPP */
 406 0160 82E0      		ldi r24,lo8(2)
 407 0162 8093 0000 		sts ch1restcount,r24
 367:firefly.c     ****     ch1resting = 1; 
 409               	.LM43:
 410 0166 899A      		sbi 49-0x20,1
 368:firefly.c     ****     sei();
 412               	.LM44:
 413               	/* #APP */
 414 0168 7894      		sei
 415               	/* #NOAPP */
 416 016a C0E0      		ldi r28,lo8(masterpins.1669)
 417 016c D0E0      		ldi r29,hi8(masterpins.1669)
 418               	.L44:
 369:firefly.c     **** 
 370:firefly.c     ****     for (mpin=0; mpin < sizeof(masterpins)/sizeof(uint8_t); mpin++) {
 371:firefly.c     ****         masterpinmask = masterpins[mpin];
 420               	.LM45:
 421 016e 8881      		ld r24,Y
 422 0170 8093 0000 		sts masterpinmask,r24
 423 0174 A0E0      		ldi r26,lo8(ch1pins.1670)
 424 0176 B0E0      		ldi r27,hi8(ch1pins.1670)
 425               	.L45:
 372:firefly.c     **** 
 373:firefly.c     ****         for (cpin=0; cpin < sizeof(ch1pins)/sizeof(uint8_t); cpin++) {
 374:firefly.c     ****             ch1pin = ch1pins[cpin];
 427               	.LM46:
 428 0178 6C90      		ld r6,X
 429 017a 20E0      		ldi r18,lo8(0)
 430 017c 30E0      		ldi r19,hi8(0)
 431 017e 00C0      		rjmp .L46
 432               	.L47:
 433               	.LBB2:
 375:firefly.c     **** 
 376:firefly.c     ****             for (ch1noteptr=0; ch1noteptr < ch1song->notecount; ch1noteptr++) {
 377:firefly.c     ****                 ch1nextnote = pgm_read_byte(&ch1song->notes[ch1noteptr++]);
 435               	.LM47:
 436 0180 F52F      		mov r31,r21
 437 0182 E42F      		mov r30,r20
 438 0184 8281      		ldd r24,Z+2
 439 0186 9381      		ldd r25,Z+3
 440 0188 820F      		add r24,r18
 441 018a 931F      		adc r25,r19
 442 018c F92F      		mov r31,r25
 443 018e E82F      		mov r30,r24
 444               	/* #APP */
 445 0190 C895      		lpm
 446 0192 802D      		mov r24, r0
 447               		
 448               	/* #NOAPP */
 449               	.LBE2:
 450 0194 8093 0000 		sts ch1nextnote,r24
 378:firefly.c     ****                 ch1noteready = 1;
GAS LISTING /var/tmp//cc8X51rx.s 			page 13


 452               	.LM48:
 453 0198 8E9A      		sbi 49-0x20,6
 454 019a 00C0      		rjmp .L48
 455               	.L49:
 379:firefly.c     **** 
 380:firefly.c     ****                 while (ch1noteready == 1) {
 381:firefly.c     ****                     WATCHDOG_OK;
 457               	.LM49:
 458 019c 81B5      		in r24,65-0x20
 459 019e 8064      		ori r24,lo8(64)
 460 01a0 81BD      		out 65-0x20,r24
 382:firefly.c     ****                     set_sleep_mode(SLEEP_MODE_IDLE);
 462               	.LM50:
 463 01a2 85B7      		in r24,85-0x20
 464 01a4 877E      		andi r24,lo8(-25)
 465 01a6 85BF      		out 85-0x20,r24
 383:firefly.c     ****                     sleep_mode();
 467               	.LM51:
 468 01a8 85B7      		in r24,85-0x20
 469 01aa 8062      		ori r24,lo8(32)
 470 01ac 85BF      		out 85-0x20,r24
 471               	/* #APP */
 472 01ae 8895      		sleep
 473               		
 474               	/* #NOAPP */
 475 01b0 85B7      		in r24,85-0x20
 476 01b2 8F7D      		andi r24,lo8(-33)
 477 01b4 85BF      		out 85-0x20,r24
 478               	.L48:
 480               	.LM52:
 481 01b6 8E99      		sbic 49-0x20,6
 482 01b8 00C0      		rjmp .L49
 484               	.LM53:
 485 01ba 2E5F      		subi r18,lo8(-(2))
 486 01bc 3F4F      		sbci r19,hi8(-(2))
 487               	.L46:
 488 01be F52F      		mov r31,r21
 489 01c0 E42F      		mov r30,r20
 490 01c2 8081      		ld r24,Z
 491 01c4 9181      		ldd r25,Z+1
 492 01c6 2817      		cp r18,r24
 493 01c8 3907      		cpc r19,r25
 494 01ca 00F0      		brlo .L47
 495 01cc 1196      		adiw r26,1
 497               	.LM54:
 498 01ce F0E0      		ldi r31,hi8(ch1pins.1670+3)
 499 01d0 A030      		cpi r26,lo8(ch1pins.1670+3)
 500 01d2 BF07      		cpc r27,r31
 501 01d4 01F4      		brne .L45
 502 01d6 2196      		adiw r28,1
 504               	.LM55:
 505 01d8 80E0      		ldi r24,hi8(masterpins.1669+2)
 506 01da C030      		cpi r28,lo8(masterpins.1669+2)
 507 01dc D807      		cpc r29,r24
 508 01de 01F0      		breq .+2
 509 01e0 00C0      		rjmp .L44
 384:firefly.c     ****                 }
GAS LISTING /var/tmp//cc8X51rx.s 			page 14


 385:firefly.c     ****             }
 386:firefly.c     ****         }
 387:firefly.c     ****     }
 388:firefly.c     ****     
 389:firefly.c     ****     cli();
 511               	.LM56:
 512               	/* #APP */
 513 01e2 F894      		cli
 390:firefly.c     ****     ch1restcount = 1;   
 515               	.LM57:
 516               	/* #NOAPP */
 517 01e4 81E0      		ldi r24,lo8(1)
 518 01e6 8093 0000 		sts ch1restcount,r24
 391:firefly.c     ****     sei();
 520               	.LM58:
 521               	/* #APP */
 522 01ea 7894      		sei
 523               	/* #NOAPP */
 524 01ec 00C0      		rjmp .L54
 525               	.L55:
 392:firefly.c     **** 
 393:firefly.c     ****     while (ch1playing) {
 394:firefly.c     ****         WATCHDOG_OK;
 527               	.LM59:
 528 01ee 81B5      		in r24,65-0x20
 529 01f0 8064      		ori r24,lo8(64)
 530 01f2 81BD      		out 65-0x20,r24
 395:firefly.c     ****         set_sleep_mode(SLEEP_MODE_IDLE);
 532               	.LM60:
 533 01f4 85B7      		in r24,85-0x20
 534 01f6 877E      		andi r24,lo8(-25)
 535 01f8 85BF      		out 85-0x20,r24
 396:firefly.c     ****         sleep_mode();
 537               	.LM61:
 538 01fa 85B7      		in r24,85-0x20
 539 01fc 8062      		ori r24,lo8(32)
 540 01fe 85BF      		out 85-0x20,r24
 541               	/* #APP */
 542 0200 8895      		sleep
 543               		
 544               	/* #NOAPP */
 545 0202 85B7      		in r24,85-0x20
 546 0204 8F7D      		andi r24,lo8(-33)
 547 0206 85BF      		out 85-0x20,r24
 548               	.L54:
 550               	.LM62:
 551 0208 8899      		sbic 49-0x20,0
 552 020a 00C0      		rjmp .L55
 553               	/* epilogue: frame size=0 */
 554 020c DF91      		pop r29
 555 020e CF91      		pop r28
 556 0210 0895      		ret
 557               	/* epilogue end (size=3) */
 558               	/* function showbootup size 110 (105) */
 569               	.Lscope2:
 571               		.stabd	78,0,0
 574               	.global	randbits
GAS LISTING /var/tmp//cc8X51rx.s 			page 15


 576               	randbits:
 577               		.stabd	46,0,0
 397:firefly.c     ****     }
 398:firefly.c     ****     
 399:firefly.c     **** }
 400:firefly.c     **** 
 401:firefly.c     **** uint8_t randwaitval (void) {
 402:firefly.c     **** #ifdef PHOTOSHOOT
 403:firefly.c     ****     return mood + randbits(3) + randbits(3)  + randbits(3); 
 404:firefly.c     **** #else
 405:firefly.c     ****     return mood + randbits(4) + randbits(4) + randbits(3) + 
 406:firefly.c     ****            randbits(2) + randbits(2) - randbits(3); 
 407:firefly.c     **** #endif
 408:firefly.c     **** }
 409:firefly.c     **** 
 410:firefly.c     **** uint8_t randscaleval (void) {
 411:firefly.c     **** 
 412:firefly.c     **** #ifdef BRIGHTER
 413:firefly.c     ****     return (randbits(6) + randbits(5) + randbits(5) + randbits(4) + 
 414:firefly.c     ****             randbits(3) + 54);
 415:firefly.c     **** #elif defined(PHOTOSHOOT)
 416:firefly.c     ****     // for photoshoot
 417:firefly.c     ****     return (randbits(6) + randbits(5) + randbits(4) + randbits(3) + 
 418:firefly.c     ****             randbits(2) + 34);
 419:firefly.c     **** #else 
 420:firefly.c     ****     /* Returns bell-like distributed random value between %23 - 69% centered
 421:firefly.c     ****         around 46% */
 422:firefly.c     ****     return (randbits(6) + randbits(5) + randbits(4) + randbits(3) + 
 423:firefly.c     ****             randbits(2) + 58);
 424:firefly.c     **** #endif
 425:firefly.c     **** }
 426:firefly.c     **** 
 427:firefly.c     **** /* pickapin -- choose a pin to play a song on.       */
 428:firefly.c     **** /*    Basically either C, D, or E.                   */
 429:firefly.c     **** /*    We take as an argument the pin of the other    */
 430:firefly.c     **** /*    channel so that we can ensure we don't return  */
 431:firefly.c     **** /*    a channel currently in use.                    */
 432:firefly.c     **** uint8_t pickapin (uint8_t inuse) {
 433:firefly.c     ****     uint8_t pinmask;
 434:firefly.c     ****     uint8_t myrand = randbits(8);
 435:firefly.c     **** 
 436:firefly.c     ****     /* faster way to do (randbits(8) % 3) */
 437:firefly.c     ****     myrand = ((uint16_t)((myrand << 1) + myrand)) >> 8;
 438:firefly.c     ****     
 439:firefly.c     ****     // 0, 1, and 2 should be only possible values.
 440:firefly.c     ****     // if we pick a pinmask equal to exclude parameter, fall through
 441:firefly.c     ****     // to next option (or wrap around to start via default)
 442:firefly.c     ****     switch ( myrand ) {
 443:firefly.c     ****         case ( 0 ) : pinmask = _BV(PIN_C); if (pinmask != inuse) break;
 444:firefly.c     ****         case ( 1 ) : pinmask = _BV(PIN_D); if (pinmask != inuse) break;
 445:firefly.c     ****         case ( 2 ) : pinmask = _BV(PIN_E); if (pinmask != inuse) break;
 446:firefly.c     ****         default    : pinmask = _BV(PIN_C); break;
 447:firefly.c     ****     }
 448:firefly.c     ****     return pinmask;
 449:firefly.c     **** }
 450:firefly.c     **** 
 451:firefly.c     **** /* pickmaster -- Pick which pin is going to be master. */
GAS LISTING /var/tmp//cc8X51rx.s 			page 16


 452:firefly.c     **** /*    Basically either A or B.  I tend to prefer       */
 453:firefly.c     **** /*    that we switch masterpins frequently, so I've    */
 454:firefly.c     **** /*    stacked the deck so that there's simply a        */
 455:firefly.c     **** /*    1 in 8 chance we keep the same masterpin.        */
 456:firefly.c     **** uint8_t pickmaster (void) {
 457:firefly.c     ****     static uint8_t ticker;
 458:firefly.c     ****     if (randbits(3) == 0) {
 459:firefly.c     ****         // 1 in 8 chance we don't switch masterpins.  
 460:firefly.c     **** 		// in this case, return the value we gave last time.
 461:firefly.c     ****         return ( (ticker & 1) ? _BV(PIN_A) : _BV(PIN_B) );
 462:firefly.c     ****     } else {
 463:firefly.c     ****         // switch masterpins
 464:firefly.c     ****         return ( (++ticker & 1) ? _BV(PIN_A) : _BV(PIN_B) );
 465:firefly.c     ****     }
 466:firefly.c     **** }
 467:firefly.c     **** 
 468:firefly.c     **** 
 469:firefly.c     **** /* randbits -- implimentation of linear feedback shift register. */
 470:firefly.c     **** uint8_t randbits (uint8_t bits) {
 579               	.LM63:
 580               	/* prologue: frame size=0 */
 581               	/* prologue end (size=0) */
 582 0212 E82F      		mov r30,r24
 471:firefly.c     ****     static uint16_t lfsr = RANDOM_SEED;
 472:firefly.c     ****     
 473:firefly.c     ****     if (lfsr == 0) FREAKOUT;
 584               	.LM64:
 585 0214 8091 0000 		lds r24,lfsr.1785
 586 0218 9091 0000 		lds r25,(lfsr.1785)+1
 587 021c 0097      		sbiw r24,0
 588 021e 01F4      		brne .L63
 589 0220 9DEE      		ldi r25,lo8(-19)
 590 0222 82E1      		ldi r24,lo8(18)
 591               	.L64:
 593               	.LM65:
 594 0224 98BB      		out 56-0x20,r25
 595 0226 88BB      		out 56-0x20,r24
 596 0228 00C0      		rjmp .L64
 597               	.L63:
 598 022a 282F      		mov r18,r24
 599 022c 392F      		mov r19,r25
 600 022e 220F      		lsl r18
 601 0230 331F      		rol r19
 474:firefly.c     **** 
 475:firefly.c     ****     if ((lfsr&0x8000)==0)
 603               	.LM66:
 604 0232 97FF      		sbrs r25,7
 605 0234 00C0      		rjmp .L69
 476:firefly.c     ****         lfsr=lfsr<<1;
 477:firefly.c     ****     else {
 478:firefly.c     ****         lfsr=lfsr<<1;
 479:firefly.c     ****         lfsr = lfsr ^ 0x1D87;
 607               	.LM67:
 608 0236 87E8      		ldi r24,lo8(7559)
 609 0238 9DE1      		ldi r25,hi8(7559)
 610 023a 2827      		eor r18,r24
 611 023c 3927      		eor r19,r25
GAS LISTING /var/tmp//cc8X51rx.s 			page 17


 612               	.L69:
 613 023e 3093 0000 		sts (lfsr.1785)+1,r19
 614 0242 2093 0000 		sts lfsr.1785,r18
 615               	.LBB3:
 480:firefly.c     ****     }
 481:firefly.c     ****     
 482:firefly.c     ****     // Mask out the bits we want.
 483:firefly.c     ****     return ((lfsr & 0xFF) & pgm_read_byte(&bitmasks[bits]));    
 617               	.LM68:
 618 0246 FF27      		clr r31
 619 0248 E050      		subi r30,lo8(-(bitmasks))
 620 024a F040      		sbci r31,hi8(-(bitmasks))
 621               	/* #APP */
 622 024c C895      		lpm
 623 024e E02D      		mov r30, r0
 624               		
 625               	/* #NOAPP */
 626 0250 8091 0000 		lds r24,lfsr.1785
 627 0254 E823      		and r30,r24
 628               	.LBE3:
 484:firefly.c     **** }
 630               	.LM69:
 631 0256 8E2F      		mov r24,r30
 632 0258 9927      		clr r25
 633               	/* epilogue: frame size=0 */
 634 025a 0895      		ret
 635               	/* epilogue end (size=1) */
 636               	/* function randbits size 41 (40) */
 644               	.Lscope3:
 646               		.stabd	78,0,0
 648               	.global	pickmaster
 650               	pickmaster:
 651               		.stabd	46,0,0
 653               	.LM70:
 654               	/* prologue: frame size=0 */
 655               	/* prologue end (size=0) */
 657               	.LM71:
 658 025c 83E0      		ldi r24,lo8(3)
 659 025e 00D0      		rcall randbits
 660 0260 9091 0000 		lds r25,ticker.1772
 661 0264 8823      		tst r24
 662 0266 01F4      		brne .L71
 664               	.LM72:
 665 0268 90FD      		sbrc r25,0
 666 026a 00C0      		rjmp .L73
 667 026c 00C0      		rjmp .L74
 668               	.L71:
 670               	.LM73:
 671 026e 892F      		mov r24,r25
 672 0270 8F5F      		subi r24,lo8(-(1))
 673 0272 8093 0000 		sts ticker.1772,r24
 674 0276 80FD      		sbrc r24,0
 675 0278 00C0      		rjmp .L73
 676               	.L74:
 677 027a 82E0      		ldi r24,lo8(2)
 678 027c 90E0      		ldi r25,hi8(2)
 679 027e 0895      		ret
GAS LISTING /var/tmp//cc8X51rx.s 			page 18


 680               	.L73:
 681 0280 80E1      		ldi r24,lo8(16)
 682 0282 90E0      		ldi r25,hi8(16)
 684               	.LM74:
 685 0284 0895      		ret
 686               	/* epilogue: frame size=0 */
 687               	/* epilogue: noreturn */
 688               	/* epilogue end (size=0) */
 689               	/* function pickmaster size 21 (21) */
 694               	.Lscope4:
 696               		.stabd	78,0,0
 699               	.global	pickapin
 701               	pickapin:
 702               		.stabd	46,0,0
 704               	.LM75:
 705               	/* prologue: frame size=0 */
 706 0286 1F93      		push r17
 707               	/* prologue end (size=1) */
 708 0288 182F      		mov r17,r24
 710               	.LM76:
 711 028a 88E0      		ldi r24,lo8(8)
 712 028c 00D0      		rcall randbits
 714               	.LM77:
 715 028e 9927      		clr r25
 717               	.LM78:
 718 0290 282F      		mov r18,r24
 719 0292 392F      		mov r19,r25
 720 0294 220F      		lsl r18
 721 0296 331F      		rol r19
 722 0298 280F      		add r18,r24
 723 029a 391F      		adc r19,r25
 724 029c 232F      		mov r18,r19
 725 029e 3327      		clr r19
 726 02a0 2130      		cpi r18,lo8(1)
 727 02a2 01F0      		breq .L80
 729               	.LM79:
 730 02a4 2130      		cpi r18,lo8(1)
 731 02a6 00F0      		brlo .L79
 732 02a8 2230      		cpi r18,lo8(2)
 733 02aa 01F4      		brne .L78
 734 02ac 00C0      		rjmp .L81
 735               	.L79:
 737               	.LM80:
 738 02ae 1830      		cpi r17,lo8(8)
 739 02b0 01F4      		brne .L78
 740 02b2 00C0      		rjmp .L82
 741               	.L80:
 743               	.LM81:
 744 02b4 1430      		cpi r17,lo8(4)
 745 02b6 01F4      		brne .L82
 746 02b8 00C0      		rjmp .L83
 747               	.L81:
 749               	.LM82:
 750 02ba 1130      		cpi r17,lo8(1)
 751 02bc 01F4      		brne .L83
 752               	.L78:
 753 02be 88E0      		ldi r24,lo8(8)
GAS LISTING /var/tmp//cc8X51rx.s 			page 19


 754 02c0 00C0      		rjmp .L84
 755               	.L82:
 756 02c2 84E0      		ldi r24,lo8(4)
 757 02c4 00C0      		rjmp .L84
 758               	.L83:
 759 02c6 81E0      		ldi r24,lo8(1)
 760               	.L84:
 762               	.LM83:
 763 02c8 9927      		clr r25
 764               	/* epilogue: frame size=0 */
 765 02ca 1F91      		pop r17
 766 02cc 0895      		ret
 767               	/* epilogue end (size=2) */
 768               	/* function pickapin size 36 (33) */
 773               	.Lscope5:
 775               		.stabd	78,0,0
 777               	.global	randscaleval
 779               	randscaleval:
 780               		.stabd	46,0,0
 782               	.LM84:
 783               	/* prologue: frame size=0 */
 784 02ce EF92      		push r14
 785 02d0 FF92      		push r15
 786 02d2 0F93      		push r16
 787 02d4 1F93      		push r17
 788               	/* prologue end (size=4) */
 790               	.LM85:
 791 02d6 86E0      		ldi r24,lo8(6)
 792 02d8 00D0      		rcall randbits
 793 02da 082F      		mov r16,r24
 794 02dc 85E0      		ldi r24,lo8(5)
 795 02de 00D0      		rcall randbits
 796 02e0 E82E      		mov r14,r24
 797 02e2 84E0      		ldi r24,lo8(4)
 798 02e4 00D0      		rcall randbits
 799 02e6 F82E      		mov r15,r24
 800 02e8 83E0      		ldi r24,lo8(3)
 801 02ea 00D0      		rcall randbits
 802 02ec 182F      		mov r17,r24
 803 02ee 82E0      		ldi r24,lo8(2)
 804 02f0 00D0      		rcall randbits
 805 02f2 0E0D      		add r16,r14
 806 02f4 080F      		add r16,r24
 807 02f6 1F0D      		add r17,r15
 808 02f8 165C      		subi r17,lo8(-(58))
 809 02fa 010F      		add r16,r17
 811               	.LM86:
 812 02fc 802F      		mov r24,r16
 813 02fe 9927      		clr r25
 814               	/* epilogue: frame size=0 */
 815 0300 1F91      		pop r17
 816 0302 0F91      		pop r16
 817 0304 FF90      		pop r15
 818 0306 EF90      		pop r14
 819 0308 0895      		ret
 820               	/* epilogue end (size=5) */
 821               	/* function randscaleval size 30 (21) */
GAS LISTING /var/tmp//cc8X51rx.s 			page 20


 823               	.Lscope6:
 825               		.stabd	78,0,0
 827               	.global	randwaitval
 829               	randwaitval:
 830               		.stabd	46,0,0
 832               	.LM87:
 833               	/* prologue: frame size=0 */
 834 030a CF92      		push r12
 835 030c DF92      		push r13
 836 030e EF92      		push r14
 837 0310 FF92      		push r15
 838 0312 0F93      		push r16
 839 0314 1F93      		push r17
 840               	/* prologue end (size=6) */
 842               	.LM88:
 843 0316 1091 0000 		lds r17,mood
 844 031a 84E0      		ldi r24,lo8(4)
 845 031c 00D0      		rcall randbits
 846 031e C82E      		mov r12,r24
 847 0320 84E0      		ldi r24,lo8(4)
 848 0322 00D0      		rcall randbits
 849 0324 D82E      		mov r13,r24
 850 0326 83E0      		ldi r24,lo8(3)
 851 0328 00D0      		rcall randbits
 852 032a 082F      		mov r16,r24
 853 032c 82E0      		ldi r24,lo8(2)
 854 032e 00D0      		rcall randbits
 855 0330 E82E      		mov r14,r24
 856 0332 82E0      		ldi r24,lo8(2)
 857 0334 00D0      		rcall randbits
 858 0336 F82E      		mov r15,r24
 859 0338 83E0      		ldi r24,lo8(3)
 860 033a 00D0      		rcall randbits
 861 033c 1C0D      		add r17,r12
 862 033e 1E0D      		add r17,r14
 863 0340 0D0D      		add r16,r13
 864 0342 0F0D      		add r16,r15
 865 0344 100F      		add r17,r16
 866 0346 181B      		sub r17,r24
 868               	.LM89:
 869 0348 812F      		mov r24,r17
 870 034a 9927      		clr r25
 871               	/* epilogue: frame size=0 */
 872 034c 1F91      		pop r17
 873 034e 0F91      		pop r16
 874 0350 FF90      		pop r15
 875 0352 EF90      		pop r14
 876 0354 DF90      		pop r13
 877 0356 CF90      		pop r12
 878 0358 0895      		ret
 879               	/* epilogue end (size=7) */
 880               	/* function randwaitval size 40 (27) */
 882               	.Lscope7:
 884               		.stabd	78,0,0
 886               	.global	pickasong
 888               	pickasong:
 889               		.stabd	46,0,0
GAS LISTING /var/tmp//cc8X51rx.s 			page 21


 485:firefly.c     **** 
 486:firefly.c     **** const Song *pickasong (void) {
 891               	.LM90:
 892               	/* prologue: frame size=0 */
 893               	/* prologue end (size=0) */
 487:firefly.c     ****     // when the number of songs to choose from is a power of two, the
 488:firefly.c     ****     // optimizer makes this quite fast.  Otherwise it can take hundreds of cycles to
 489:firefly.c     ****     // do the multiplication.
 490:firefly.c     ****     return songs[ (randbits(8) * (sizeof(songs)/sizeof(Song *))) >> 8 ];
 895               	.LM91:
 896 035a 88E0      		ldi r24,lo8(8)
 897 035c 00D0      		rcall randbits
 898 035e E82F      		mov r30,r24
 899 0360 FF27      		clr r31
 900 0362 A4E0      		ldi r26,4
 901 0364 F695      	1:	lsr r31
 902 0366 E795      		ror r30
 903 0368 AA95      		dec r26
 904 036a 01F4      		brne 1b
 905 036c EE0F      		lsl r30
 906 036e FF1F      		rol r31
 907 0370 E050      		subi r30,lo8(-(songs))
 908 0372 F040      		sbci r31,hi8(-(songs))
 491:firefly.c     **** }
 910               	.LM92:
 911 0374 8081      		ld r24,Z
 912 0376 9181      		ldd r25,Z+1
 913               	/* epilogue: frame size=0 */
 914 0378 0895      		ret
 915               	/* epilogue end (size=1) */
 916               	/* function pickasong size 16 (15) */
 918               	.Lscope8:
 920               		.stabd	78,0,0
 922               	.global	main
 924               	main:
 925               		.stabd	46,0,0
 927               	.LM93:
 928               	/* prologue: frame size=0 */
 929 037a AF92      		push r10
 930 037c BF92      		push r11
 931 037e CF92      		push r12
 932 0380 DF92      		push r13
 933 0382 EF92      		push r14
 934 0384 FF92      		push r15
 935 0386 0F93      		push r16
 936 0388 1F93      		push r17
 937 038a CF93      		push r28
 938 038c DF93      		push r29
 939               	/* prologue end (size=10) */
 940               	.LBB11:
 941               	.LBB12:
 943               	.LM94:
 944 038e 88E1      		ldi r24,lo8(24)
 945 0390 90E0      		ldi r25,hi8(24)
 946 0392 2DE0      		ldi r18,lo8(13)
 947               	/* #APP */
 948 0394 0FB6      		in __tmp_reg__,__SREG__
GAS LISTING /var/tmp//cc8X51rx.s 			page 22


 949 0396 F894      		cli
 950 0398 A895      		wdr
 951 039a 81BD      		out 33,r24
 952 039c 0FBE      		out __SREG__,__tmp_reg__
 953 039e 21BD      		out 33,r18
 955               	.LM95:
 956               	/* #NOAPP */
 957 03a0 81B5      		in r24,65-0x20
 958 03a2 8064      		ori r24,lo8(64)
 959 03a4 81BD      		out 65-0x20,r24
 961               	.LM96:
 962 03a6 8FEF      		ldi r24,lo8(-1)
 963 03a8 87BB      		out 55-0x20,r24
 965               	.LM97:
 966 03aa 8DEE      		ldi r24,lo8(-19)
 967 03ac 88BB      		out 56-0x20,r24
 969               	.LM98:
 970 03ae 80B5      		in r24,64-0x20
 971 03b0 8860      		ori r24,lo8(8)
 972 03b2 80BD      		out 64-0x20,r24
 974               	.LM99:
 975 03b4 80B5      		in r24,64-0x20
 976 03b6 8260      		ori r24,lo8(2)
 977 03b8 80BD      		out 64-0x20,r24
 979               	.LM100:
 980 03ba 80B5      		in r24,64-0x20
 981 03bc 8160      		ori r24,lo8(1)
 982 03be 80BD      		out 64-0x20,r24
 984               	.LM101:
 985 03c0 82E0      		ldi r24,lo8(2)
 986 03c2 8ABD      		out 74-0x20,r24
 988               	.LM102:
 989 03c4 83BF      		out 83-0x20,r24
 991               	.LM103:
 992 03c6 89E1      		ldi r24,lo8(25)
 993 03c8 89BD      		out 73-0x20,r24
 994               	.LBB13:
 996               	.LM104:
 997 03ca 20E8      		ldi r18,lo8(-128)
 998 03cc 82E0      		ldi r24,lo8(2)
 999 03ce 90E0      		ldi r25,hi8(2)
 1000               	/* #APP */
 1001 03d0 0FB6      		in __tmp_reg__,__SREG__
 1002 03d2 F894      		cli
 1003 03d4 26BD      		out 38, r18
 1004 03d6 86BD      		out 38, r24
 1005 03d8 0FBE      		out __SREG__, __tmp_reg__
 1006               	/* #NOAPP */
 1007               	.LBE13:
 1009               	.LM105:
 1010 03da 80E1      		ldi r24,lo8(16)
 1011 03dc 89BF      		out 89-0x20,r24
 1013               	.LM106:
 1014 03de 81B5      		in r24,65-0x20
 1015 03e0 8064      		ori r24,lo8(64)
 1016 03e2 81BD      		out 65-0x20,r24
 1017               	.LBE12:
GAS LISTING /var/tmp//cc8X51rx.s 			page 23


 1018               	.LBE11:
 1020               	.LM107:
 1021 03e4 8824      		clr r8
 1022 03e6 7724      		clr r7
 1023 03e8 6624      		clr r6
 1024 03ea 5524      		clr r5
 1025 03ec 4424      		clr r4
 1026 03ee 3324      		clr r3
 1027 03f0 2224      		clr r2
 1029               	.LM108:
 1030 03f2 11BA      		out 49-0x20,__zero_reg__
 1032               	.LM109:
 1033               	/* #APP */
 1034 03f4 7894      		sei
 1036               	.LM110:
 1037               	/* #NOAPP */
 1038 03f6 00D0      		rcall showbootup
 1040               	.LM111:
 1041 03f8 00D0      		rcall randwaitval
 1042 03fa 8093 0000 		sts ch1restcount,r24
 1044               	.LM112:
 1045 03fe 00D0      		rcall randwaitval
 1046 0400 8093 0000 		sts ch2restcount,r24
 1048               	.LM113:
 1049 0404 899A      		sbi 49-0x20,1
 1051               	.LM114:
 1052 0406 8B9A      		sbi 49-0x20,3
 1053 0408 AA24      		clr r10
 1054 040a BB24      		clr r11
 1055 040c CC24      		clr r12
 1056 040e DD24      		clr r13
 1057 0410 EE24      		clr r14
 1058 0412 FF24      		clr r15
 1059 0414 C0E0      		ldi r28,lo8(0)
 1060 0416 D0E0      		ldi r29,hi8(0)
 1061               	.L134:
 1063               	.LM115:
 1064 0418 8899      		sbic 49-0x20,0
 1065 041a 00C0      		rjmp .L94
 1066 041c 8A9B      		sbis 49-0x20,2
 1067 041e 00C0      		rjmp .L96
 1068               	.L94:
 1070               	.LM116:
 1071 0420 889B      		sbis 49-0x20,0
 1072 0422 00C0      		rjmp .L97
 1073 0424 8E99      		sbic 49-0x20,6
 1074 0426 00C0      		rjmp .L97
 1076               	.LM117:
 1077 0428 FB2D      		mov r31,r11
 1078 042a EA2D      		mov r30,r10
 1079 042c 8081      		ld r24,Z
 1080 042e 9181      		ldd r25,Z+1
 1081 0430 E816      		cp r14,r24
 1082 0432 F906      		cpc r15,r25
 1083 0434 01F0      		breq .L97
 1084               	.LBB14:
 1086               	.LM118:
GAS LISTING /var/tmp//cc8X51rx.s 			page 24


 1087 0436 8281      		ldd r24,Z+2
 1088 0438 9381      		ldd r25,Z+3
 1089 043a 8E0D      		add r24,r14
 1090 043c 9F1D      		adc r25,r15
 1091 043e 0894      		sec
 1092 0440 E11C      		adc r14,__zero_reg__
 1093 0442 F11C      		adc r15,__zero_reg__
 1094 0444 F92F      		mov r31,r25
 1095 0446 E82F      		mov r30,r24
 1096               	/* #APP */
 1097 0448 C895      		lpm
 1098 044a 902D      		mov r25, r0
 1099               		
 1100               	/* #NOAPP */
 1101               	.LBE14:
 1103               	.LM119:
 1104 044c 8091 0000 		lds r24,ch1scale
 1105 0450 692F      		mov r22,r25
 1106 0452 7727      		clr r23
 1107 0454 9927      		clr r25
 1108 0456 00D0      		rcall __mulhi3
 1109 0458 892F      		mov r24,r25
 1110 045a 9927      		clr r25
 1112               	.LM120:
 1113               	/* #APP */
 1114 045c F894      		cli
 1116               	.LM121:
 1117               	/* #NOAPP */
 1118 045e 8093 0000 		sts ch1nextnote,r24
 1120               	.LM122:
 1121 0462 8E9A      		sbi 49-0x20,6
 1123               	.LM123:
 1124               	/* #APP */
 1125 0464 7894      		sei
 1126               	/* #NOAPP */
 1127 0466 00C0      		rjmp .L134
 1128               	.L97:
 1130               	.LM124:
 1131 0468 8A9B      		sbis 49-0x20,2
 1132 046a 00C0      		rjmp .L101
 1133 046c 8F99      		sbic 49-0x20,7
 1134 046e 00C0      		rjmp .L101
 1136               	.LM125:
 1137 0470 FD2D      		mov r31,r13
 1138 0472 EC2D      		mov r30,r12
 1139 0474 8081      		ld r24,Z
 1140 0476 9181      		ldd r25,Z+1
 1141 0478 C817      		cp r28,r24
 1142 047a D907      		cpc r29,r25
 1143 047c 01F0      		breq .L101
 1144               	.LBB15:
 1146               	.LM126:
 1147 047e 8281      		ldd r24,Z+2
 1148 0480 9381      		ldd r25,Z+3
 1149 0482 8C0F      		add r24,r28
 1150 0484 9D1F      		adc r25,r29
 1151 0486 2196      		adiw r28,1
GAS LISTING /var/tmp//cc8X51rx.s 			page 25


 1152 0488 F92F      		mov r31,r25
 1153 048a E82F      		mov r30,r24
 1154               	/* #APP */
 1155 048c C895      		lpm
 1156 048e 902D      		mov r25, r0
 1157               		
 1158               	/* #NOAPP */
 1159               	.LBE15:
 1161               	.LM127:
 1162 0490 8091 0000 		lds r24,ch2scale
 1163 0494 692F      		mov r22,r25
 1164 0496 7727      		clr r23
 1165 0498 9927      		clr r25
 1166 049a 00D0      		rcall __mulhi3
 1167 049c 892F      		mov r24,r25
 1168 049e 9927      		clr r25
 1170               	.LM128:
 1171               	/* #APP */
 1172 04a0 F894      		cli
 1174               	.LM129:
 1175               	/* #NOAPP */
 1176 04a2 8093 0000 		sts ch2nextnote,r24
 1178               	.LM130:
 1179 04a6 8F9A      		sbi 49-0x20,7
 1181               	.LM131:
 1182               	/* #APP */
 1183 04a8 7894      		sei
 1184               	/* #NOAPP */
 1185 04aa 00C0      		rjmp .L134
 1186               	.L101:
 1188               	.LM132:
 1189 04ac 889B      		sbis 49-0x20,0
 1190 04ae 00C0      		rjmp .L105
 1191 04b0 8091 0000 		lds r24,ch1restcount
 1192 04b4 8823      		tst r24
 1193 04b6 01F4      		brne .L105
 1195               	.LM133:
 1196 04b8 00D0      		rcall randwaitval
 1198               	.LM134:
 1199               	/* #APP */
 1200 04ba F894      		cli
 1202               	.LM135:
 1203               	/* #NOAPP */
 1204 04bc 8093 0000 		sts ch1restcount,r24
 1206               	.LM136:
 1207               	/* #APP */
 1208 04c0 7894      		sei
 1209               	/* #NOAPP */
 1210 04c2 00C0      		rjmp .L134
 1211               	.L105:
 1213               	.LM137:
 1214 04c4 8A9B      		sbis 49-0x20,2
 1215 04c6 00C0      		rjmp .L96
 1216 04c8 8091 0000 		lds r24,ch2restcount
 1217 04cc 8823      		tst r24
 1218 04ce 01F4      		brne .L96
 1220               	.LM138:
GAS LISTING /var/tmp//cc8X51rx.s 			page 26


 1221 04d0 00D0      		rcall randwaitval
 1223               	.LM139:
 1224               	/* #APP */
 1225 04d2 F894      		cli
 1227               	.LM140:
 1228               	/* #NOAPP */
 1229 04d4 8093 0000 		sts ch2restcount,r24
 1231               	.LM141:
 1232               	/* #APP */
 1233 04d8 7894      		sei
 1234               	/* #NOAPP */
 1235 04da 00C0      		rjmp .L134
 1236               	.L96:
 1238               	.LM142:
 1239 04dc 8899      		sbic 49-0x20,0
 1240 04de 00C0      		rjmp .L110
 1241 04e0 8999      		sbic 49-0x20,1
 1242 04e2 00C0      		rjmp .L110
 1243 04e4 8E99      		sbic 49-0x20,6
 1244 04e6 00C0      		rjmp .L110
 1246               	.LM143:
 1247 04e8 00D0      		rcall pickasong
 1248 04ea A82E      		mov r10,r24
 1249 04ec B92E      		mov r11,r25
 1251               	.LM144:
 1252 04ee 872D      		mov r24,r7
 1253 04f0 00D0      		rcall pickapin
 1254 04f2 682E      		mov r6,r24
 1256               	.LM145:
 1257 04f4 00D0      		rcall randscaleval
 1258 04f6 8093 0000 		sts ch1scale,r24
 1259               	.LBB16:
 1261               	.LM146:
 1262 04fa FB2D      		mov r31,r11
 1263 04fc EA2D      		mov r30,r10
 1264 04fe 8281      		ldd r24,Z+2
 1265 0500 9381      		ldd r25,Z+3
 1266 0502 F92F      		mov r31,r25
 1267 0504 E82F      		mov r30,r24
 1268               	/* #APP */
 1269 0506 C895      		lpm
 1270 0508 102D      		mov r17, r0
 1271               		
 1272               	/* #NOAPP */
 1273               	.LBE16:
 1275               	.LM147:
 1276 050a 0091 0000 		lds r16,ch1scale
 1278               	.LM148:
 1279 050e 8B9B      		sbis 49-0x20,3
 1280 0510 00C0      		rjmp .L114
 1281 0512 00D0      		rcall pickmaster
 1282 0514 8093 0000 		sts masterpinmask,r24
 1283               	.L114:
 1285               	.LM149:
 1286               	/* #APP */
 1287 0518 F894      		cli
 1289               	.LM150:
GAS LISTING /var/tmp//cc8X51rx.s 			page 27


 1290               	/* #NOAPP */
 1291 051a 612F      		mov r22,r17
 1292 051c 7727      		clr r23
 1293 051e 802F      		mov r24,r16
 1294 0520 9927      		clr r25
 1295 0522 00D0      		rcall __mulhi3
 1296 0524 892F      		mov r24,r25
 1297 0526 9927      		clr r25
 1299               	.LM151:
 1300 0528 8093 0000 		sts ch1nextnote,r24
 1302               	.LM152:
 1303 052c 8E9A      		sbi 49-0x20,6
 1305               	.LM153:
 1306               	/* #APP */
 1307 052e 7894      		sei
 1308               	/* #NOAPP */
 1309 0530 11E0      		ldi r17,lo8(1)
 1310 0532 E12E      		mov r14,r17
 1311 0534 F12C      		mov r15,__zero_reg__
 1312 0536 00C0      		rjmp .L134
 1313               	.L110:
 1315               	.LM154:
 1316 0538 8A99      		sbic 49-0x20,2
 1317 053a 00C0      		rjmp .L116
 1318 053c 8B99      		sbic 49-0x20,3
 1319 053e 00C0      		rjmp .L116
 1320 0540 8F99      		sbic 49-0x20,7
 1321 0542 00C0      		rjmp .L116
 1323               	.LM155:
 1324 0544 00D0      		rcall pickasong
 1325 0546 C82E      		mov r12,r24
 1326 0548 D92E      		mov r13,r25
 1328               	.LM156:
 1329 054a 862D      		mov r24,r6
 1330 054c 00D0      		rcall pickapin
 1331 054e 782E      		mov r7,r24
 1333               	.LM157:
 1334 0550 00D0      		rcall randscaleval
 1335 0552 8093 0000 		sts ch2scale,r24
 1336               	.LBB17:
 1338               	.LM158:
 1339 0556 DD2D      		mov r29,r13
 1340 0558 CC2D      		mov r28,r12
 1341 055a EA81      		ldd r30,Y+2
 1342 055c FB81      		ldd r31,Y+3
 1343               	/* #APP */
 1344 055e C895      		lpm
 1345 0560 102D      		mov r17, r0
 1346               		
 1347               	/* #NOAPP */
 1348               	.LBE17:
 1350               	.LM159:
 1351 0562 0091 0000 		lds r16,ch2scale
 1353               	.LM160:
 1354 0566 899B      		sbis 49-0x20,1
 1355 0568 00C0      		rjmp .L120
 1356 056a 00D0      		rcall pickmaster
GAS LISTING /var/tmp//cc8X51rx.s 			page 28


 1357 056c 8093 0000 		sts masterpinmask,r24
 1358               	.L120:
 1360               	.LM161:
 1361               	/* #APP */
 1362 0570 F894      		cli
 1364               	.LM162:
 1365               	/* #NOAPP */
 1366 0572 612F      		mov r22,r17
 1367 0574 7727      		clr r23
 1368 0576 802F      		mov r24,r16
 1369 0578 9927      		clr r25
 1370 057a 00D0      		rcall __mulhi3
 1371 057c 892F      		mov r24,r25
 1372 057e 9927      		clr r25
 1374               	.LM163:
 1375 0580 8093 0000 		sts ch2nextnote,r24
 1377               	.LM164:
 1378 0584 8F9A      		sbi 49-0x20,7
 1380               	.LM165:
 1381               	/* #APP */
 1382 0586 7894      		sei
 1383               	/* #NOAPP */
 1384 0588 C1E0      		ldi r28,lo8(1)
 1385 058a D0E0      		ldi r29,hi8(1)
 1386 058c 00C0      		rjmp .L134
 1387               	.L116:
 1389               	.LM166:
 1390 058e 8C9B      		sbis 49-0x20,4
 1391 0590 00C0      		rjmp .L122
 1393               	.LM167:
 1394 0592 85E0      		ldi r24,lo8(5)
 1395 0594 00D0      		rcall randbits
 1396 0596 885F      		subi r24,lo8(-(8))
 1397 0598 8093 0000 		sts mood,r24
 1399               	.LM168:
 1400 059c 88E5      		ldi r24,lo8(600)
 1401 059e 92E0      		ldi r25,hi8(600)
 1402 05a0 9093 0000 		sts (mood_count)+1,r25
 1403 05a4 8093 0000 		sts mood_count,r24
 1405               	.LM169:
 1406 05a8 8C98      		cbi 49-0x20,4
 1407 05aa 00C0      		rjmp .L134
 1408               	.L122:
 1410               	.LM170:
 1411 05ac 81B5      		in r24,65-0x20
 1412 05ae 8064      		ori r24,lo8(64)
 1413 05b0 81BD      		out 65-0x20,r24
 1415               	.LM171:
 1416 05b2 899B      		sbis 49-0x20,1
 1417 05b4 00C0      		rjmp .L124
 1418 05b6 8B9B      		sbis 49-0x20,3
 1419 05b8 00C0      		rjmp .L124
 1421               	.LM172:
 1422 05ba 85B7      		in r24,85-0x20
 1423 05bc 877E      		andi r24,lo8(-25)
 1424 05be 8061      		ori r24,lo8(16)
 1425 05c0 85BF      		out 85-0x20,r24
GAS LISTING /var/tmp//cc8X51rx.s 			page 29


 1427               	.LM173:
 1428 05c2 85B7      		in r24,85-0x20
 1429 05c4 8062      		ori r24,lo8(32)
 1430 05c6 85BF      		out 85-0x20,r24
 1431               	/* #APP */
 1432 05c8 8895      		sleep
 1433               		
 1434               	/* #NOAPP */
 1435 05ca 00C0      		rjmp .L133
 1436               	.L124:
 1438               	.LM174:
 1439 05cc 85B7      		in r24,85-0x20
 1440 05ce 877E      		andi r24,lo8(-25)
 1441 05d0 85BF      		out 85-0x20,r24
 1443               	.LM175:
 1444 05d2 85B7      		in r24,85-0x20
 1445 05d4 8062      		ori r24,lo8(32)
 1446 05d6 85BF      		out 85-0x20,r24
 1447               	/* #APP */
 1448 05d8 8895      		sleep
 1449               		
 1450               	/* #NOAPP */
 1451               	.L133:
 1452 05da 85B7      		in r24,85-0x20
 1453 05dc 8F7D      		andi r24,lo8(-33)
 1454 05de 85BF      		out 85-0x20,r24
 1455 05e0 00C0      		rjmp .L134
 1456               	/* epilogue: frame size=0 */
 1457               	/* epilogue: noreturn */
 1458               	/* epilogue end (size=0) */
 1459               	/* function main size 354 (344) */
 1479               	.Lscope9:
 1481               		.stabd	78,0,0
 1482               	.global	bootsongnotes
 1483               		.section	.progmem.data,"a",@progbits
 1486               	bootsongnotes:
 1487 0000 00        		.byte	0
 1488 0001 04        		.byte	4
 1489 0002 09        		.byte	9
 1490 0003 10        		.byte	16
 1491 0004 18        		.byte	24
 1492 0005 21        		.byte	33
 1493 0006 29        		.byte	41
 1494 0007 2F        		.byte	47
 1495 0008 32        		.byte	50
 1496 0009 31        		.byte	49
 1497 000a 2C        		.byte	44
 1498 000b 23        		.byte	35
 1499 000c 1A        		.byte	26
 1500 000d 11        		.byte	17
 1501 000e 0A        		.byte	10
 1502 000f 05        		.byte	5
 1503 0010 01        		.byte	1
 1504 0011 00        		.byte	0
 1505 0012 00        		.byte	0
 1506               	.global	bootsong
 1507               		.data
GAS LISTING /var/tmp//cc8X51rx.s 			page 30


 1510               	bootsong:
 1511 0000 1300      		.word	19
 1512 0002 0000      		.word	bootsongnotes
 1513               	.global	song2anotes
 1514               		.section	.progmem.data
 1517               	song2anotes:
 1518 0013 02        		.byte	2
 1519 0014 1D        		.byte	29
 1520 0015 51        		.byte	81
 1521 0016 7B        		.byte	123
 1522 0017 82        		.byte	-126
 1523 0018 68        		.byte	104
 1524 0019 3F        		.byte	63
 1525 001a 18        		.byte	24
 1526 001b 02        		.byte	2
 1527 001c 01        		.byte	1
 1528 001d 01        		.byte	1
 1529 001e 01        		.byte	1
 1530 001f 01        		.byte	1
 1531 0020 01        		.byte	1
 1532 0021 01        		.byte	1
 1533 0022 04        		.byte	4
 1534 0023 0F        		.byte	15
 1535 0024 1A        		.byte	26
 1536 0025 24        		.byte	36
 1537 0026 2E        		.byte	46
 1538 0027 37        		.byte	55
 1539 0028 42        		.byte	66
 1540 0029 4F        		.byte	79
 1541 002a 5B        		.byte	91
 1542 002b 66        		.byte	102
 1543 002c 6D        		.byte	109
 1544 002d 73        		.byte	115
 1545 002e 79        		.byte	121
 1546 002f 83        		.byte	-125
 1547 0030 8E        		.byte	-114
 1548 0031 98        		.byte	-104
 1549 0032 9B        		.byte	-101
 1550 0033 97        		.byte	-105
 1551 0034 8D        		.byte	-115
 1552 0035 85        		.byte	-123
 1553 0036 83        		.byte	-125
 1554 0037 87        		.byte	-121
 1555 0038 90        		.byte	-112
 1556 0039 99        		.byte	-103
 1557 003a 9E        		.byte	-98
 1558 003b 9E        		.byte	-98
 1559 003c 9A        		.byte	-102
 1560 003d 97        		.byte	-105
 1561 003e 96        		.byte	-106
 1562 003f 95        		.byte	-107
 1563 0040 94        		.byte	-108
 1564 0041 90        		.byte	-112
 1565 0042 8B        		.byte	-117
 1566 0043 88        		.byte	-120
 1567 0044 8A        		.byte	-118
 1568 0045 91        		.byte	-111
GAS LISTING /var/tmp//cc8X51rx.s 			page 31


 1569 0046 9B        		.byte	-101
 1570 0047 A1        		.byte	-95
 1571 0048 A0        		.byte	-96
 1572 0049 99        		.byte	-103
 1573 004a 90        		.byte	-112
 1574 004b 8A        		.byte	-118
 1575 004c 8B        		.byte	-117
 1576 004d 91        		.byte	-111
 1577 004e 98        		.byte	-104
 1578 004f 9C        		.byte	-100
 1579 0050 9A        		.byte	-102
 1580 0051 94        		.byte	-108
 1581 0052 8D        		.byte	-115
 1582 0053 8A        		.byte	-118
 1583 0054 8C        		.byte	-116
 1584 0055 91        		.byte	-111
 1585 0056 96        		.byte	-106
 1586 0057 99        		.byte	-103
 1587 0058 99        		.byte	-103
 1588 0059 98        		.byte	-104
 1589 005a 98        		.byte	-104
 1590 005b 9A        		.byte	-102
 1591 005c 9A        		.byte	-102
 1592 005d 96        		.byte	-106
 1593 005e 8E        		.byte	-114
 1594 005f 86        		.byte	-122
 1595 0060 81        		.byte	-127
 1596 0061 84        		.byte	-124
 1597 0062 8E        		.byte	-114
 1598 0063 9C        		.byte	-100
 1599 0064 A8        		.byte	-88
 1600 0065 AA        		.byte	-86
 1601 0066 A1        		.byte	-95
 1602 0067 92        		.byte	-110
 1603 0068 83        		.byte	-125
 1604 0069 79        		.byte	121
 1605 006a 75        		.byte	117
 1606 006b 74        		.byte	116
 1607 006c 74        		.byte	116
 1608 006d 73        		.byte	115
 1609 006e 71        		.byte	113
 1610 006f 6E        		.byte	110
 1611 0070 6D        		.byte	109
 1612 0071 6A        		.byte	106
 1613 0072 65        		.byte	101
 1614 0073 5C        		.byte	92
 1615 0074 50        		.byte	80
 1616 0075 43        		.byte	67
 1617 0076 3A        		.byte	58
 1618 0077 34        		.byte	52
 1619 0078 31        		.byte	49
 1620 0079 2E        		.byte	46
 1621 007a 2B        		.byte	43
 1622 007b 27        		.byte	39
 1623 007c 21        		.byte	33
 1624 007d 1B        		.byte	27
 1625 007e 16        		.byte	22
GAS LISTING /var/tmp//cc8X51rx.s 			page 32


 1626 007f 12        		.byte	18
 1627 0080 0E        		.byte	14
 1628 0081 0B        		.byte	11
 1629 0082 07        		.byte	7
 1630 0083 05        		.byte	5
 1631 0084 03        		.byte	3
 1632 0085 01        		.byte	1
 1633 0086 01        		.byte	1
 1634 0087 00        		.byte	0
 1635 0088 01        		.byte	1
 1636 0089 00        		.byte	0
 1637               	.global	song2a
 1638               		.data
 1641               	song2a:
 1642 0004 7700      		.word	119
 1643 0006 0000      		.word	song2anotes
 1644               	.global	song2bnotes
 1645               		.section	.progmem.data
 1648               	song2bnotes:
 1649 008a 01        		.byte	1
 1650 008b 1F        		.byte	31
 1651 008c 59        		.byte	89
 1652 008d 7E        		.byte	126
 1653 008e 77        		.byte	119
 1654 008f 55        		.byte	85
 1655 0090 2A        		.byte	42
 1656 0091 06        		.byte	6
 1657 0092 01        		.byte	1
 1658 0093 01        		.byte	1
 1659 0094 01        		.byte	1
 1660 0095 01        		.byte	1
 1661 0096 01        		.byte	1
 1662 0097 01        		.byte	1
 1663 0098 08        		.byte	8
 1664 0099 16        		.byte	22
 1665 009a 25        		.byte	37
 1666 009b 33        		.byte	51
 1667 009c 40        		.byte	64
 1668 009d 48        		.byte	72
 1669 009e 50        		.byte	80
 1670 009f 5C        		.byte	92
 1671 00a0 6C        		.byte	108
 1672 00a1 7A        		.byte	122
 1673 00a2 7F        		.byte	127
 1674 00a3 7A        		.byte	122
 1675 00a4 75        		.byte	117
 1676 00a5 7C        		.byte	124
 1677 00a6 8F        		.byte	-113
 1678 00a7 A3        		.byte	-93
 1679 00a8 A7        		.byte	-89
 1680 00a9 9B        		.byte	-101
 1681 00aa 8B        		.byte	-117
 1682 00ab 87        		.byte	-121
 1683 00ac 8E        		.byte	-114
 1684 00ad 96        		.byte	-106
 1685 00ae 96        		.byte	-106
 1686 00af 8D        		.byte	-115
GAS LISTING /var/tmp//cc8X51rx.s 			page 33


 1687 00b0 83        		.byte	-125
 1688 00b1 81        		.byte	-127
 1689 00b2 85        		.byte	-123
 1690 00b3 8B        		.byte	-117
 1691 00b4 8F        		.byte	-113
 1692 00b5 92        		.byte	-110
 1693 00b6 95        		.byte	-107
 1694 00b7 98        		.byte	-104
 1695 00b8 96        		.byte	-106
 1696 00b9 90        		.byte	-112
 1697 00ba 8A        		.byte	-118
 1698 00bb 8A        		.byte	-118
 1699 00bc 91        		.byte	-111
 1700 00bd 96        		.byte	-106
 1701 00be 93        		.byte	-109
 1702 00bf 89        		.byte	-119
 1703 00c0 84        		.byte	-124
 1704 00c1 89        		.byte	-119
 1705 00c2 99        		.byte	-103
 1706 00c3 A6        		.byte	-90
 1707 00c4 A7        		.byte	-89
 1708 00c5 9C        		.byte	-100
 1709 00c6 94        		.byte	-108
 1710 00c7 95        		.byte	-107
 1711 00c8 9C        		.byte	-100
 1712 00c9 A1        		.byte	-95
 1713 00ca 9C        		.byte	-100
 1714 00cb 93        		.byte	-109
 1715 00cc 8D        		.byte	-115
 1716 00cd 91        		.byte	-111
 1717 00ce 98        		.byte	-104
 1718 00cf 9D        		.byte	-99
 1719 00d0 9C        		.byte	-100
 1720 00d1 9A        		.byte	-102
 1721 00d2 9C        		.byte	-100
 1722 00d3 A1        		.byte	-95
 1723 00d4 A1        		.byte	-95
 1724 00d5 98        		.byte	-104
 1725 00d6 8C        		.byte	-116
 1726 00d7 85        		.byte	-123
 1727 00d8 83        		.byte	-125
 1728 00d9 82        		.byte	-126
 1729 00da 7C        		.byte	124
 1730 00db 72        		.byte	114
 1731 00dc 69        		.byte	105
 1732 00dd 66        		.byte	102
 1733 00de 67        		.byte	103
 1734 00df 65        		.byte	101
 1735 00e0 5D        		.byte	93
 1736 00e1 52        		.byte	82
 1737 00e2 4A        		.byte	74
 1738 00e3 44        		.byte	68
 1739 00e4 3F        		.byte	63
 1740 00e5 37        		.byte	55
 1741 00e6 2E        		.byte	46
 1742 00e7 26        		.byte	38
 1743 00e8 20        		.byte	32
GAS LISTING /var/tmp//cc8X51rx.s 			page 34


 1744 00e9 1D        		.byte	29
 1745 00ea 19        		.byte	25
 1746 00eb 14        		.byte	20
 1747 00ec 0F        		.byte	15
 1748 00ed 0B        		.byte	11
 1749 00ee 08        		.byte	8
 1750 00ef 06        		.byte	6
 1751 00f0 04        		.byte	4
 1752 00f1 02        		.byte	2
 1753 00f2 01        		.byte	1
 1754 00f3 01        		.byte	1
 1755 00f4 00        		.byte	0
 1756 00f5 00        		.byte	0
 1757               	.global	song2b
 1758               		.data
 1761               	song2b:
 1762 0008 6C00      		.word	108
 1763 000a 0000      		.word	song2bnotes
 1764               	.global	song2cnotes
 1765               		.section	.progmem.data
 1768               	song2cnotes:
 1769 00f6 02        		.byte	2
 1770 00f7 19        		.byte	25
 1771 00f8 46        		.byte	70
 1772 00f9 75        		.byte	117
 1773 00fa 92        		.byte	-110
 1774 00fb 90        		.byte	-112
 1775 00fc 6F        		.byte	111
 1776 00fd 3D        		.byte	61
 1777 00fe 12        		.byte	18
 1778 00ff 01        		.byte	1
 1779 0100 01        		.byte	1
 1780 0101 01        		.byte	1
 1781 0102 01        		.byte	1
 1782 0103 01        		.byte	1
 1783 0104 01        		.byte	1
 1784 0105 01        		.byte	1
 1785 0106 01        		.byte	1
 1786 0107 08        		.byte	8
 1787 0108 12        		.byte	18
 1788 0109 1C        		.byte	28
 1789 010a 27        		.byte	39
 1790 010b 32        		.byte	50
 1791 010c 3C        		.byte	60
 1792 010d 45        		.byte	69
 1793 010e 4E        		.byte	78
 1794 010f 55        		.byte	85
 1795 0110 5C        		.byte	92
 1796 0111 63        		.byte	99
 1797 0112 69        		.byte	105
 1798 0113 6F        		.byte	111
 1799 0114 76        		.byte	118
 1800 0115 7E        		.byte	126
 1801 0116 86        		.byte	-122
 1802 0117 8E        		.byte	-114
 1803 0118 95        		.byte	-107
 1804 0119 9B        		.byte	-101
GAS LISTING /var/tmp//cc8X51rx.s 			page 35


 1805 011a 9F        		.byte	-97
 1806 011b A1        		.byte	-95
 1807 011c A0        		.byte	-96
 1808 011d 9C        		.byte	-100
 1809 011e 98        		.byte	-104
 1810 011f 92        		.byte	-110
 1811 0120 8B        		.byte	-117
 1812 0121 86        		.byte	-122
 1813 0122 81        		.byte	-127
 1814 0123 7E        		.byte	126
 1815 0124 7D        		.byte	125
 1816 0125 7E        		.byte	126
 1817 0126 81        		.byte	-127
 1818 0127 86        		.byte	-122
 1819 0128 8C        		.byte	-116
 1820 0129 94        		.byte	-108
 1821 012a 9B        		.byte	-101
 1822 012b A2        		.byte	-94
 1823 012c A8        		.byte	-88
 1824 012d AB        		.byte	-85
 1825 012e AC        		.byte	-84
 1826 012f AB        		.byte	-85
 1827 0130 A8        		.byte	-88
 1828 0131 A3        		.byte	-93
 1829 0132 9E        		.byte	-98
 1830 0133 99        		.byte	-103
 1831 0134 95        		.byte	-107
 1832 0135 92        		.byte	-110
 1833 0136 90        		.byte	-112
 1834 0137 90        		.byte	-112
 1835 0138 92        		.byte	-110
 1836 0139 94        		.byte	-108
 1837 013a 97        		.byte	-105
 1838 013b 9A        		.byte	-102
 1839 013c 9D        		.byte	-99
 1840 013d 9E        		.byte	-98
 1841 013e 9E        		.byte	-98
 1842 013f 9D        		.byte	-99
 1843 0140 9A        		.byte	-102
 1844 0141 96        		.byte	-106
 1845 0142 91        		.byte	-111
 1846 0143 8D        		.byte	-115
 1847 0144 89        		.byte	-119
 1848 0145 86        		.byte	-122
 1849 0146 85        		.byte	-123
 1850 0147 84        		.byte	-124
 1851 0148 86        		.byte	-122
 1852 0149 88        		.byte	-120
 1853 014a 8B        		.byte	-117
 1854 014b 8F        		.byte	-113
 1855 014c 93        		.byte	-109
 1856 014d 95        		.byte	-107
 1857 014e 96        		.byte	-106
 1858 014f 96        		.byte	-106
 1859 0150 93        		.byte	-109
 1860 0151 8F        		.byte	-113
 1861 0152 8A        		.byte	-118
GAS LISTING /var/tmp//cc8X51rx.s 			page 36


 1862 0153 85        		.byte	-123
 1863 0154 80        		.byte	-128
 1864 0155 7B        		.byte	123
 1865 0156 76        		.byte	118
 1866 0157 73        		.byte	115
 1867 0158 71        		.byte	113
 1868 0159 6F        		.byte	111
 1869 015a 6D        		.byte	109
 1870 015b 6C        		.byte	108
 1871 015c 69        		.byte	105
 1872 015d 66        		.byte	102
 1873 015e 62        		.byte	98
 1874 015f 5C        		.byte	92
 1875 0160 56        		.byte	86
 1876 0161 4E        		.byte	78
 1877 0162 46        		.byte	70
 1878 0163 3F        		.byte	63
 1879 0164 37        		.byte	55
 1880 0165 30        		.byte	48
 1881 0166 2A        		.byte	42
 1882 0167 25        		.byte	37
 1883 0168 21        		.byte	33
 1884 0169 1D        		.byte	29
 1885 016a 19        		.byte	25
 1886 016b 16        		.byte	22
 1887 016c 13        		.byte	19
 1888 016d 10        		.byte	16
 1889 016e 0D        		.byte	13
 1890 016f 0A        		.byte	10
 1891 0170 07        		.byte	7
 1892 0171 05        		.byte	5
 1893 0172 03        		.byte	3
 1894 0173 02        		.byte	2
 1895 0174 01        		.byte	1
 1896 0175 01        		.byte	1
 1897 0176 00        		.byte	0
 1898 0177 00        		.byte	0
 1899               	.global	song2c
 1900               		.data
 1903               	song2c:
 1904 000c 8200      		.word	130
 1905 000e 0000      		.word	song2cnotes
 1906               	.global	song2dnotes
 1907               		.section	.progmem.data
 1910               	song2dnotes:
 1911 0178 01        		.byte	1
 1912 0179 1B        		.byte	27
 1913 017a 48        		.byte	72
 1914 017b 6D        		.byte	109
 1915 017c 79        		.byte	121
 1916 017d 68        		.byte	104
 1917 017e 3D        		.byte	61
 1918 017f 11        		.byte	17
 1919 0180 01        		.byte	1
 1920 0181 01        		.byte	1
 1921 0182 01        		.byte	1
 1922 0183 01        		.byte	1
GAS LISTING /var/tmp//cc8X51rx.s 			page 37


 1923 0184 01        		.byte	1
 1924 0185 01        		.byte	1
 1925 0186 01        		.byte	1
 1926 0187 0B        		.byte	11
 1927 0188 15        		.byte	21
 1928 0189 22        		.byte	34
 1929 018a 30        		.byte	48
 1930 018b 3C        		.byte	60
 1931 018c 46        		.byte	70
 1932 018d 4D        		.byte	77
 1933 018e 56        		.byte	86
 1934 018f 63        		.byte	99
 1935 0190 73        		.byte	115
 1936 0191 80        		.byte	-128
 1937 0192 87        		.byte	-121
 1938 0193 87        		.byte	-121
 1939 0194 86        		.byte	-122
 1940 0195 88        		.byte	-120
 1941 0196 8D        		.byte	-115
 1942 0197 90        		.byte	-112
 1943 0198 8F        		.byte	-113
 1944 0199 8B        		.byte	-117
 1945 019a 8A        		.byte	-118
 1946 019b 8D        		.byte	-115
 1947 019c 93        		.byte	-109
 1948 019d 94        		.byte	-108
 1949 019e 8E        		.byte	-114
 1950 019f 83        		.byte	-125
 1951 01a0 7B        		.byte	123
 1952 01a1 7E        		.byte	126
 1953 01a2 8A        		.byte	-118
 1954 01a3 99        		.byte	-103
 1955 01a4 A4        		.byte	-92
 1956 01a5 A6        		.byte	-90
 1957 01a6 A1        		.byte	-95
 1958 01a7 9C        		.byte	-100
 1959 01a8 9A        		.byte	-102
 1960 01a9 9A        		.byte	-102
 1961 01aa 99        		.byte	-103
 1962 01ab 97        		.byte	-105
 1963 01ac 96        		.byte	-106
 1964 01ad 9B        		.byte	-101
 1965 01ae A3        		.byte	-93
 1966 01af A9        		.byte	-87
 1967 01b0 A6        		.byte	-90
 1968 01b1 98        		.byte	-104
 1969 01b2 88        		.byte	-120
 1970 01b3 7E        		.byte	126
 1971 01b4 80        		.byte	-128
 1972 01b5 8B        		.byte	-117
 1973 01b6 97        		.byte	-105
 1974 01b7 9C        		.byte	-100
 1975 01b8 99        		.byte	-103
 1976 01b9 92        		.byte	-110
 1977 01ba 8C        		.byte	-116
 1978 01bb 88        		.byte	-120
 1979 01bc 83        		.byte	-125
GAS LISTING /var/tmp//cc8X51rx.s 			page 38


 1980 01bd 7B        		.byte	123
 1981 01be 73        		.byte	115
 1982 01bf 6E        		.byte	110
 1983 01c0 6E        		.byte	110
 1984 01c1 70        		.byte	112
 1985 01c2 6E        		.byte	110
 1986 01c3 64        		.byte	100
 1987 01c4 56        		.byte	86
 1988 01c5 49        		.byte	73
 1989 01c6 41        		.byte	65
 1990 01c7 3E        		.byte	62
 1991 01c8 3C        		.byte	60
 1992 01c9 3A        		.byte	58
 1993 01ca 34        		.byte	52
 1994 01cb 2E        		.byte	46
 1995 01cc 28        		.byte	40
 1996 01cd 23        		.byte	35
 1997 01ce 1F        		.byte	31
 1998 01cf 19        		.byte	25
 1999 01d0 14        		.byte	20
 2000 01d1 0F        		.byte	15
 2001 01d2 0B        		.byte	11
 2002 01d3 08        		.byte	8
 2003 01d4 06        		.byte	6
 2004 01d5 04        		.byte	4
 2005 01d6 02        		.byte	2
 2006 01d7 01        		.byte	1
 2007 01d8 01        		.byte	1
 2008 01d9 00        		.byte	0
 2009 01da 00        		.byte	0
 2010               	.global	song2d
 2011               		.data
 2014               	song2d:
 2015 0010 6300      		.word	99
 2016 0012 0000      		.word	song2dnotes
 2017               	.global	song2enotes
 2018               		.section	.progmem.data
 2021               	song2enotes:
 2022 01db 01        		.byte	1
 2023 01dc 1A        		.byte	26
 2024 01dd 49        		.byte	73
 2025 01de 74        		.byte	116
 2026 01df 83        		.byte	-125
 2027 01e0 73        		.byte	115
 2028 01e1 50        		.byte	80
 2029 01e2 27        		.byte	39
 2030 01e3 08        		.byte	8
 2031 01e4 01        		.byte	1
 2032 01e5 01        		.byte	1
 2033 01e6 01        		.byte	1
 2034 01e7 01        		.byte	1
 2035 01e8 01        		.byte	1
 2036 01e9 01        		.byte	1
 2037 01ea 01        		.byte	1
 2038 01eb 06        		.byte	6
 2039 01ec 0F        		.byte	15
 2040 01ed 1A        		.byte	26
GAS LISTING /var/tmp//cc8X51rx.s 			page 39


 2041 01ee 24        		.byte	36
 2042 01ef 2F        		.byte	47
 2043 01f0 3A        		.byte	58
 2044 01f1 46        		.byte	70
 2045 01f2 52        		.byte	82
 2046 01f3 5B        		.byte	91
 2047 01f4 62        		.byte	98
 2048 01f5 66        		.byte	102
 2049 01f6 6A        		.byte	106
 2050 01f7 6F        		.byte	111
 2051 01f8 77        		.byte	119
 2052 01f9 83        		.byte	-125
 2053 01fa 90        		.byte	-112
 2054 01fb 9A        		.byte	-102
 2055 01fc 9D        		.byte	-99
 2056 01fd 99        		.byte	-103
 2057 01fe 90        		.byte	-112
 2058 01ff 89        		.byte	-119
 2059 0200 86        		.byte	-122
 2060 0201 89        		.byte	-119
 2061 0202 92        		.byte	-110
 2062 0203 9A        		.byte	-102
 2063 0204 9E        		.byte	-98
 2064 0205 9C        		.byte	-100
 2065 0206 95        		.byte	-107
 2066 0207 8D        		.byte	-115
 2067 0208 89        		.byte	-119
 2068 0209 8A        		.byte	-118
 2069 020a 8F        		.byte	-113
 2070 020b 97        		.byte	-105
 2071 020c 9D        		.byte	-99
 2072 020d 9E        		.byte	-98
 2073 020e 9B        		.byte	-101
 2074 020f 97        		.byte	-105
 2075 0210 94        		.byte	-108
 2076 0211 96        		.byte	-106
 2077 0212 9A        		.byte	-102
 2078 0213 9E        		.byte	-98
 2079 0214 A0        		.byte	-96
 2080 0215 9E        		.byte	-98
 2081 0216 99        		.byte	-103
 2082 0217 94        		.byte	-108
 2083 0218 90        		.byte	-112
 2084 0219 91        		.byte	-111
 2085 021a 93        		.byte	-109
 2086 021b 96        		.byte	-106
 2087 021c 96        		.byte	-106
 2088 021d 92        		.byte	-110
 2089 021e 8C        		.byte	-116
 2090 021f 85        		.byte	-123
 2091 0220 82        		.byte	-126
 2092 0221 83        		.byte	-125
 2093 0222 87        		.byte	-121
 2094 0223 8C        		.byte	-116
 2095 0224 8F        		.byte	-113
 2096 0225 90        		.byte	-112
 2097 0226 8E        		.byte	-114
GAS LISTING /var/tmp//cc8X51rx.s 			page 40


 2098 0227 8D        		.byte	-115
 2099 0228 8D        		.byte	-115
 2100 0229 90        		.byte	-112
 2101 022a 95        		.byte	-107
 2102 022b 99        		.byte	-103
 2103 022c 9C        		.byte	-100
 2104 022d 9D        		.byte	-99
 2105 022e 9D        		.byte	-99
 2106 022f 9D        		.byte	-99
 2107 0230 A0        		.byte	-96
 2108 0231 A4        		.byte	-92
 2109 0232 A7        		.byte	-89
 2110 0233 A7        		.byte	-89
 2111 0234 A1        		.byte	-95
 2112 0235 99        		.byte	-103
 2113 0236 91        		.byte	-111
 2114 0237 8E        		.byte	-114
 2115 0238 8F        		.byte	-113
 2116 0239 95        		.byte	-107
 2117 023a 9A        		.byte	-102
 2118 023b 9B        		.byte	-101
 2119 023c 95        		.byte	-107
 2120 023d 89        		.byte	-119
 2121 023e 7C        		.byte	124
 2122 023f 73        		.byte	115
 2123 0240 70        		.byte	112
 2124 0241 74        		.byte	116
 2125 0242 7B        		.byte	123
 2126 0243 80        		.byte	-128
 2127 0244 80        		.byte	-128
 2128 0245 79        		.byte	121
 2129 0246 6E        		.byte	110
 2130 0247 63        		.byte	99
 2131 0248 5B        		.byte	91
 2132 0249 58        		.byte	88
 2133 024a 58        		.byte	88
 2134 024b 59        		.byte	89
 2135 024c 57        		.byte	87
 2136 024d 53        		.byte	83
 2137 024e 4B        		.byte	75
 2138 024f 42        		.byte	66
 2139 0250 39        		.byte	57
 2140 0251 32        		.byte	50
 2141 0252 2C        		.byte	44
 2142 0253 26        		.byte	38
 2143 0254 22        		.byte	34
 2144 0255 1D        		.byte	29
 2145 0256 19        		.byte	25
 2146 0257 14        		.byte	20
 2147 0258 11        		.byte	17
 2148 0259 0D        		.byte	13
 2149 025a 09        		.byte	9
 2150 025b 07        		.byte	7
 2151 025c 04        		.byte	4
 2152 025d 03        		.byte	3
 2153 025e 01        		.byte	1
 2154 025f 01        		.byte	1
GAS LISTING /var/tmp//cc8X51rx.s 			page 41


 2155 0260 00        		.byte	0
 2156 0261 01        		.byte	1
 2157 0262 00        		.byte	0
 2158               	.global	song2e
 2159               		.data
 2162               	song2e:
 2163 0014 8800      		.word	136
 2164 0016 0000      		.word	song2enotes
 2165               	.global	song2fnotes
 2166               		.section	.progmem.data
 2169               	song2fnotes:
 2170 0263 02        		.byte	2
 2171 0264 24        		.byte	36
 2172 0265 5E        		.byte	94
 2173 0266 82        		.byte	-126
 2174 0267 79        		.byte	121
 2175 0268 4F        		.byte	79
 2176 0269 1B        		.byte	27
 2177 026a 01        		.byte	1
 2178 026b 01        		.byte	1
 2179 026c 01        		.byte	1
 2180 026d 01        		.byte	1
 2181 026e 01        		.byte	1
 2182 026f 01        		.byte	1
 2183 0270 05        		.byte	5
 2184 0271 10        		.byte	16
 2185 0272 1E        		.byte	30
 2186 0273 2D        		.byte	45
 2187 0274 3B        		.byte	59
 2188 0275 47        		.byte	71
 2189 0276 52        		.byte	82
 2190 0277 5E        		.byte	94
 2191 0278 6B        		.byte	107
 2192 0279 77        		.byte	119
 2193 027a 82        		.byte	-126
 2194 027b 89        		.byte	-119
 2195 027c 8E        		.byte	-114
 2196 027d 93        		.byte	-109
 2197 027e 97        		.byte	-105
 2198 027f 9A        		.byte	-102
 2199 0280 99        		.byte	-103
 2200 0281 95        		.byte	-107
 2201 0282 90        		.byte	-112
 2202 0283 8D        		.byte	-115
 2203 0284 8D        		.byte	-115
 2204 0285 8F        		.byte	-113
 2205 0286 8F        		.byte	-113
 2206 0287 8C        		.byte	-116
 2207 0288 86        		.byte	-122
 2208 0289 83        		.byte	-125
 2209 028a 87        		.byte	-121
 2210 028b 91        		.byte	-111
 2211 028c A0        		.byte	-96
 2212 028d AB        		.byte	-85
 2213 028e AC        		.byte	-84
 2214 028f A3        		.byte	-93
 2215 0290 96        		.byte	-106
GAS LISTING /var/tmp//cc8X51rx.s 			page 42


 2216 0291 8D        		.byte	-115
 2217 0292 8C        		.byte	-116
 2218 0293 91        		.byte	-111
 2219 0294 97        		.byte	-105
 2220 0295 98        		.byte	-104
 2221 0296 93        		.byte	-109
 2222 0297 8A        		.byte	-118
 2223 0298 86        		.byte	-122
 2224 0299 88        		.byte	-120
 2225 029a 93        		.byte	-109
 2226 029b 9F        		.byte	-97
 2227 029c A5        		.byte	-91
 2228 029d A2        		.byte	-94
 2229 029e 98        		.byte	-104
 2230 029f 8C        		.byte	-116
 2231 02a0 84        		.byte	-124
 2232 02a1 81        		.byte	-127
 2233 02a2 83        		.byte	-125
 2234 02a3 84        		.byte	-124
 2235 02a4 83        		.byte	-125
 2236 02a5 7F        		.byte	127
 2237 02a6 7B        		.byte	123
 2238 02a7 77        		.byte	119
 2239 02a8 74        		.byte	116
 2240 02a9 70        		.byte	112
 2241 02aa 69        		.byte	105
 2242 02ab 60        		.byte	96
 2243 02ac 56        		.byte	86
 2244 02ad 4D        		.byte	77
 2245 02ae 45        		.byte	69
 2246 02af 3E        		.byte	62
 2247 02b0 36        		.byte	54
 2248 02b1 2D        		.byte	45
 2249 02b2 26        		.byte	38
 2250 02b3 1F        		.byte	31
 2251 02b4 1B        		.byte	27
 2252 02b5 17        		.byte	23
 2253 02b6 13        		.byte	19
 2254 02b7 0E        		.byte	14
 2255 02b8 0A        		.byte	10
 2256 02b9 06        		.byte	6
 2257 02ba 04        		.byte	4
 2258 02bb 02        		.byte	2
 2259 02bc 01        		.byte	1
 2260 02bd 01        		.byte	1
 2261 02be 00        		.byte	0
 2262 02bf 00        		.byte	0
 2263               	.global	song2f
 2264               		.data
 2267               	song2f:
 2268 0018 5D00      		.word	93
 2269 001a 0000      		.word	song2fnotes
 2270               	.global	song2gnotes
 2271               		.section	.progmem.data
 2274               	song2gnotes:
 2275 02c0 02        		.byte	2
 2276 02c1 2A        		.byte	42
GAS LISTING /var/tmp//cc8X51rx.s 			page 43


 2277 02c2 63        		.byte	99
 2278 02c3 79        		.byte	121
 2279 02c4 60        		.byte	96
 2280 02c5 2A        		.byte	42
 2281 02c6 03        		.byte	3
 2282 02c7 01        		.byte	1
 2283 02c8 01        		.byte	1
 2284 02c9 01        		.byte	1
 2285 02ca 01        		.byte	1
 2286 02cb 01        		.byte	1
 2287 02cc 0C        		.byte	12
 2288 02cd 19        		.byte	25
 2289 02ce 29        		.byte	41
 2290 02cf 3C        		.byte	60
 2291 02d0 4D        		.byte	77
 2292 02d1 56        		.byte	86
 2293 02d2 5B        		.byte	91
 2294 02d3 64        		.byte	100
 2295 02d4 76        		.byte	118
 2296 02d5 88        		.byte	-120
 2297 02d6 90        		.byte	-112
 2298 02d7 8F        		.byte	-113
 2299 02d8 8D        		.byte	-115
 2300 02d9 92        		.byte	-110
 2301 02da 99        		.byte	-103
 2302 02db 9B        		.byte	-101
 2303 02dc 99        		.byte	-103
 2304 02dd 98        		.byte	-104
 2305 02de 9B        		.byte	-101
 2306 02df 9A        		.byte	-102
 2307 02e0 94        		.byte	-108
 2308 02e1 8D        		.byte	-115
 2309 02e2 8E        		.byte	-114
 2310 02e3 98        		.byte	-104
 2311 02e4 9F        		.byte	-97
 2312 02e5 9A        		.byte	-102
 2313 02e6 8E        		.byte	-114
 2314 02e7 88        		.byte	-120
 2315 02e8 8D        		.byte	-115
 2316 02e9 98        		.byte	-104
 2317 02ea 99        		.byte	-103
 2318 02eb 8F        		.byte	-113
 2319 02ec 84        		.byte	-124
 2320 02ed 7E        		.byte	126
 2321 02ee 7C        		.byte	124
 2322 02ef 78        		.byte	120
 2323 02f0 6F        		.byte	111
 2324 02f1 65        		.byte	101
 2325 02f2 5C        		.byte	92
 2326 02f3 53        		.byte	83
 2327 02f4 48        		.byte	72
 2328 02f5 3B        		.byte	59
 2329 02f6 31        		.byte	49
 2330 02f7 2B        		.byte	43
 2331 02f8 26        		.byte	38
 2332 02f9 1E        		.byte	30
 2333 02fa 15        		.byte	21
GAS LISTING /var/tmp//cc8X51rx.s 			page 44


 2334 02fb 0F        		.byte	15
 2335 02fc 0B        		.byte	11
 2336 02fd 08        		.byte	8
 2337 02fe 05        		.byte	5
 2338 02ff 03        		.byte	3
 2339 0300 01        		.byte	1
 2340 0301 01        		.byte	1
 2341 0302 00        		.byte	0
 2342 0303 00        		.byte	0
 2343               	.global	song2g
 2344               		.data
 2347               	song2g:
 2348 001c 4400      		.word	68
 2349 001e 0000      		.word	song2gnotes
 2350               	.global	bootsongs
 2353               	bootsongs:
 2354 0020 0000      		.word	bootsong
 2355               	.global	songs
 2358               	songs:
 2359 0022 0000      		.word	song2a
 2360 0024 0000      		.word	song2b
 2361 0026 0000      		.word	song2b
 2362 0028 0000      		.word	song2c
 2363 002a 0000      		.word	song2c
 2364 002c 0000      		.word	song2c
 2365 002e 0000      		.word	song2d
 2366 0030 0000      		.word	song2d
 2367 0032 0000      		.word	song2e
 2368 0034 0000      		.word	song2e
 2369 0036 0000      		.word	song2e
 2370 0038 0000      		.word	song2f
 2371 003a 0000      		.word	song2f
 2372 003c 0000      		.word	song2g
 2373 003e 0000      		.word	song2g
 2374 0040 0000      		.word	song2g
 2375               	.global	bitmasks
 2376               		.section	.progmem.data
 2379               	bitmasks:
 2380 0304 00        		.byte	0
 2381 0305 01        		.byte	1
 2382 0306 03        		.byte	3
 2383 0307 07        		.byte	7
 2384 0308 0F        		.byte	15
 2385 0309 1F        		.byte	31
 2386 030a 3F        		.byte	63
 2387 030b 7F        		.byte	127
 2388 030c FF        		.byte	-1
 2389               	.global	about
 2392               	about:
 2393 030d 4A61 7220 		.ascii	"Jar of Fireflies\nDesign and Implimentation by Xander Hudson"
 2393      6F66 2046 
 2393      6972 6566 
 2393      6C69 6573 
 2393      0A44 6573 
 2394 0348 2028 6A61 		.ascii	" (jar@synoptic.org)\nIdea and Inspiration by Kayobi Tierney\n"
 2394      7240 7379 
 2394      6E6F 7074 
GAS LISTING /var/tmp//cc8X51rx.s 			page 45


 2394      6963 2E6F 
 2394      7267 290A 
 2395 0383 5370 6563 		.ascii	"Specia"
 2395      6961 
 2396 0389 6C20 7468 		.string	"l thanks to Katie Horn for getting me to think about electronics"
 2396      616E 6B73 
 2396      2074 6F20 
 2396      4B61 7469 
 2396      6520 486F 
 2397               	.global	version
 2400               	version:
 2401 03ca 2452 6576 		.string	"$Revision: 1.41 $ $Date: 2007/01/10 04:35:55 $"
 2401      6973 696F 
 2401      6E3A 2031 
 2401      2E34 3120 
 2401      2420 2444 
 2402               	.global	mood
 2403               		.data
 2406               	mood:
 2407 0042 02        		.byte	2
 2408               	.global	mood_count
 2411               	mood_count:
 2412 0043 1E00      		.word	30
 2415               	lfsr.1785:
 2416 0045 CE74      		.word	29902
 2418               		.lcomm ticker.1772,1
 2422               	ch1pins.1670:
 2423 0047 08        		.byte	8
 2424 0048 04        		.byte	4
 2425 0049 01        		.byte	1
 2429               	masterpins.1669:
 2430 004a 10        		.byte	16
 2431 004b 02        		.byte	2
 2433               		.lcomm x.1449,1
 2435               		.comm ch1restcount,1,1
 2436               		.comm ch2restcount,1,1
 2437               		.comm ch1nextnote,1,1
 2438               		.comm ch2nextnote,1,1
 2439               		.comm ch1scale,1,1
 2440               		.comm ch2scale,1,1
 2441               		.comm ch1nextscale,1,1
 2442               		.comm ch2nextscale,1,1
 2443               		.comm masterpinmask,1,1
 2483               		.text
 2485               	.Letext0:
 2486               	/* File "firefly.c": code  861 = 0x035d ( 793), prologues  36, epilogues  32 */
GAS LISTING /var/tmp//cc8X51rx.s 			page 46


DEFINED SYMBOLS
                            *ABS*:00000000 firefly.c
/var/tmp//cc8X51rx.s:3      *ABS*:0000003f __SREG__
/var/tmp//cc8X51rx.s:4      *ABS*:0000003e __SP_H__
/var/tmp//cc8X51rx.s:5      *ABS*:0000003d __SP_L__
/var/tmp//cc8X51rx.s:6      *ABS*:00000000 __tmp_reg__
/var/tmp//cc8X51rx.s:7      *ABS*:00000001 __zero_reg__
/var/tmp//cc8X51rx.s:98     .text:00000000 __vector_12
                            *COM*:00000001 ch1restcount
                            *COM*:00000001 ch2restcount
/var/tmp//cc8X51rx.s:2411   .data:00000043 mood_count
/var/tmp//cc8X51rx.s:167    .text:00000068 __vector_10
/var/tmp//cc8X51rx.s:2418   .bss:00000001 x.1449
                            *COM*:00000001 ch1nextnote
                            *COM*:00000001 ch2nextnote
                            *COM*:00000001 masterpinmask
/var/tmp//cc8X51rx.s:333    .text:00000122 von_175
/var/tmp//cc8X51rx.s:335    .text:00000124 turnon_175
/var/tmp//cc8X51rx.s:339    .text:0000012a turnoff_175
/var/tmp//cc8X51rx.s:341    .text:0000012c done_175
/var/tmp//cc8X51rx.s:356    .text:0000013c von_181
/var/tmp//cc8X51rx.s:358    .text:0000013e turnon_181
/var/tmp//cc8X51rx.s:362    .text:00000144 turnoff_181
/var/tmp//cc8X51rx.s:364    .text:00000146 done_181
/var/tmp//cc8X51rx.s:387    .text:00000152 showbootup
/var/tmp//cc8X51rx.s:2353   .data:00000020 bootsongs
/var/tmp//cc8X51rx.s:2429   .data:0000004a masterpins.1669
/var/tmp//cc8X51rx.s:2422   .data:00000047 ch1pins.1670
/var/tmp//cc8X51rx.s:576    .text:00000212 randbits
/var/tmp//cc8X51rx.s:2415   .data:00000045 lfsr.1785
/var/tmp//cc8X51rx.s:2379   .progmem.data:00000304 bitmasks
/var/tmp//cc8X51rx.s:650    .text:0000025c pickmaster
                             .bss:00000000 ticker.1772
/var/tmp//cc8X51rx.s:701    .text:00000286 pickapin
/var/tmp//cc8X51rx.s:779    .text:000002ce randscaleval
/var/tmp//cc8X51rx.s:829    .text:0000030a randwaitval
/var/tmp//cc8X51rx.s:2406   .data:00000042 mood
/var/tmp//cc8X51rx.s:888    .text:0000035a pickasong
/var/tmp//cc8X51rx.s:2358   .data:00000022 songs
/var/tmp//cc8X51rx.s:924    .text:0000037a main
                            *COM*:00000001 ch1scale
                            *COM*:00000001 ch2scale
/var/tmp//cc8X51rx.s:1486   .progmem.data:00000000 bootsongnotes
/var/tmp//cc8X51rx.s:1510   .data:00000000 bootsong
/var/tmp//cc8X51rx.s:1517   .progmem.data:00000013 song2anotes
/var/tmp//cc8X51rx.s:1641   .data:00000004 song2a
/var/tmp//cc8X51rx.s:1648   .progmem.data:0000008a song2bnotes
/var/tmp//cc8X51rx.s:1761   .data:00000008 song2b
/var/tmp//cc8X51rx.s:1768   .progmem.data:000000f6 song2cnotes
/var/tmp//cc8X51rx.s:1903   .data:0000000c song2c
/var/tmp//cc8X51rx.s:1910   .progmem.data:00000178 song2dnotes
/var/tmp//cc8X51rx.s:2014   .data:00000010 song2d
/var/tmp//cc8X51rx.s:2021   .progmem.data:000001db song2enotes
/var/tmp//cc8X51rx.s:2162   .data:00000014 song2e
/var/tmp//cc8X51rx.s:2169   .progmem.data:00000263 song2fnotes
/var/tmp//cc8X51rx.s:2267   .data:00000018 song2f
/var/tmp//cc8X51rx.s:2274   .progmem.data:000002c0 song2gnotes
GAS LISTING /var/tmp//cc8X51rx.s 			page 47


/var/tmp//cc8X51rx.s:2347   .data:0000001c song2g
/var/tmp//cc8X51rx.s:2392   .progmem.data:0000030d about
/var/tmp//cc8X51rx.s:2400   .progmem.data:000003ca version
                            *COM*:00000001 ch1nextscale
                            *COM*:00000001 ch2nextscale

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__mulhi3
